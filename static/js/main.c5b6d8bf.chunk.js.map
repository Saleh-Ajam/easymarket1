{"version":3,"sources":["components/LoadingComponent.js","shared/baseUrl.js","components/MenuComponent.js","components/HeaderComponent.js","components/SocialButtonsComponent.js","components/FooterComponent.js","components/HomeComponent.js","components/MapComponent.js","components/ContactComponent.js","components/CommentFormComponent.js","components/RatingChartComponent.js","components/ProductDetailsComponent.js","components/AboutComponent.js","components/FavoriteComponent.js","components/ProfileSettingsComponent.js","components/SignupComponent.js","redux/ActionTypes.js","redux/ActionCreators.js","components/MainComponent.js","redux/products.js","redux/leaders.js","redux/promotions.js","redux/comments.js","redux/favorites.js","redux/auth.js","redux/usersnames.js","redux/forms.js","App.js","redux/configureStore.js","reportWebVitals.js","index.js"],"names":["Loading","className","icon","pulse","size","fixed","baseUrl","imageUrl","RenderMenuItem","product","Card","to","_id","CardImg","top","height","src","image","alt","name","CardBody","CardTitle","tag","color","price","toFixed","Menu","products","useState","setSelectedProduct","menu","map","onProductSelected","isLoading","errMess","Breadcrumb","BreadcrumbItem","active","StyledMenu","withStyles","paper","border","props","elevation","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","StyledMenuItem","theme","root","backgroundColor","palette","primary","main","common","white","MenuItem","Header","toggleNav","setState","isNavOpen","state","setTimeout","console","log","handleLogin","event","toggleModal","loginUser","username","value","password","preventDefault","handleClick","anchorEl","currentTarget","handleClose","handleProfileSettings","handleSignout","handleLogout","isModalOpen","bind","closeNav","this","logoutUser","Navbar","dark","expand","NavbarToggler","onClick","auth","isAuthenticated","NavbarBrand","href","width","Avatar","aria-haspopup","variant","userFirstname","userImage","Collapse","isOpen","navbar","Nav","NavItem","aria-controls","id","keepMounted","open","Boolean","onClose","ListItemIcon","fontSize","class","ListItemText","Button","Jumbotron","Modal","toggle","ModalHeader","ModalBody","Form","onSubmit","FormGroup","Label","htmlFor","Input","type","innerRef","input","Component","SocialButtons","fab","RenderCard","item","in","transformProps","exitTransform","designation","CardSubtitle","CardText","description","Home","productsLoading","productsErrMess","promotion","promoLoading","promoErrMess","leader","leaderLoading","leaderErrMess","mapStyles","MapContainer","showingInfoWindow","activeMarker","selectedPlace","onMarkerClick","marker","e","google","zoom","style","initialCenter","lat","lng","visible","GoogleApiWrapper","required","val","length","maxLength","len","minLength","validEmail","test","isNumber","isNaN","Number","Contact","values","handleSubmit","postFeedback","firstname","lastname","email","telnum","agree","contactType","message","resetFeedbackForm","role","model","Row","md","Col","text","placeholder","validators","show","messages","offset","check","checkbox","select","textarea","rows","CommentForm","productId","postComment","rating","setRating","comment","for","inactiveColor","onChange","StyledRating","styled","Rating","RatingChart","commentsArray","ratingArray","i","totalRating","numofRatings","fiveStarsPercent","fourStarsPercent","threeStarsPercent","twoStarsPercent","oneStarsPercent","defaultValue","readOnly","precision","emptyIcon","Progress","RenderProduct","favorite","postFavorite","deleteFavorite","CardImgOverlay","outline","RenderComments","commentsList","commentsErrMess","comments","author","Intl","DateTimeFormat","year","month","day","format","Date","parse","createdAt","ProductDetails","productComments","isCommentFormModalOpen","setIsCommentFormModalOpen","toggleCommentFormModal","RenderLeader","About","leaders","CardHeader","title","Table","scope","Media","left","middle","object","body","heading","Favorites","favorites","list","ProfileSettings","imageHandler","uploadImage","target","files","form","FormData","append","editUserName","editFirstName","editLastName","setNewPassword","passwordIsTrue","passwordNotMatchedErrMess","handleEditUserName","handleEditFirstName","handleEditLastName","handleSetNewPassword","updateUser","newPassword","confirmPassword","user","alert","resetProfileSettingsForm","accept","autocomplete","usernameExists","usersnames","includes","userLastname","Signup","showPassword","passwordErrMess","passwordStrengthIndicator","handleShowPassword","handlePasswordOnChange","signupUser","resetSignupForm","xcvbn","score","passwordStrengthColor","background","passwordStrengthLabel","ADD_COMMENT","PRODUCTS_LOADING","PRODUCTS_FAILED","ADD_PRODUCTS","PROMOS_LOADING","ADD_PROMOS","PROMOS_FAILED","ADD_COMMENTS","COMMENTS_FAILED","ADD_LEADERS","LEADERS_FAILED","LEADERS_LOADING","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAILURE","LOGOUT_REQUEST","LOGOUT_SUCCESS","FAVORITES_LOADING","FAVORITES_FAILED","ADD_FAVORITES","SIGNUP_REQUEST","SIGNUP_SUCCESS","SIGNUP_FAILURE","ADD_USERSNAMES","USERSNAMES_FAILED","UPDATEUSER_REQUEST","UPDATEUSER_SUCCESS","UPDATEUSER_FAILURE","UPLOAD_IMAGE_REQUEST","UPLOAD_IMAGE_SUCCESS","UPLOAD_IMAGE_FAILURE","addComment","ActionTypes","payload","productsFailed","errmess","addProducts","commentsFailed","addComments","promosLoading","promosFailed","addPromos","promos","leadersLoading","leadersFailed","addLeaders","creds","dispatch","requestLogin","fetch","method","headers","JSON","stringify","then","response","ok","error","Error","status","statusText","json","success","localStorage","setItem","token","userId","fetchFavorites","receiveLogin","catch","removeItem","favoritesFailed","favoritesLoading","bearer","getItem","addFavorites","requestSignup","filename","usersNamesFailed","addUsersNames","usernames","requestUpdateUser","receiveUpdatedUser","Main","fetchProducts","fetchPromos","fetchComments","fetchLeaders","fetchUsersNames","PrivateRoute","component","rest","render","pathname","from","location","RouteForNOtAuthinticated","TransitionGroup","CSSTransition","classNames","timeout","path","filter","featured","promotions","match","params","productsComments","some","exact","key","withRouter","connect","actions","reset","newComment","credentials","newFeedback","dishId","Products","action","Leaders","Promotions","Comments","concat","Auth","Usersnames","InitialFeedback","InitialSignup","InitialProfileSettings","App","store","createStore","combineReducers","createForms","feedback","signup","profileSettings","applyMiddleware","thunk","logger","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c5b6d8bf.chunk.js","sourcesContent":["import React from 'react';\r\nimport { MDBIcon } from 'mdbreact';\r\nexport const Loading = () => {\r\n    return(\r\n        <div className=\"col-12 loading-spinner\">\r\n            <MDBIcon icon=\"spinner\" pulse size=\"3x\" fixed />\r\n            <span className=\"sr-only\">Loading...</span>\r\n        </div>\r\n    );\r\n};","export const baseUrl =\r\n  \"https://easy-market-proxy.onrender.com/https://easy-market-server.onrender.com/\";\r\nexport const imageUrl = \"https://easy-market-server.onrender.com/\";\r\n","import { useState } from 'react';\r\nimport {\r\n   Card, CardImg, CardBody,\r\n   CardTitle,\r\n   Breadcrumb,\r\n   BreadcrumbItem\r\n } from 'reactstrap';\r\n import {Link} from 'react-router-dom';\r\n import { Loading } from './LoadingComponent';\r\n import { imageUrl } from '../shared/baseUrl';\r\n\r\n function RenderMenuItem({product}){\r\n   return(\r\n      \r\n         <Card>\r\n            <Link to={`/menu/${product._id}`}>\r\n               <CardImg top  height='200px' src={imageUrl + product.image} alt={product.name} />\r\n               <CardBody>\r\n                  <CardTitle  className='align-text-center' tag=\"h5\" color='#000'>{product.name}</CardTitle>\r\n               </CardBody>\r\n            </Link>\r\n            <p className='product-price-menu-item'>{(product.price/100).toFixed(2) +'€'}</p>\r\n         </Card>\r\n\r\n   );\r\n }\r\n\r\n\r\nfunction Menu({products}){\r\n     \r\n     const [selectedProduct, setSelectedProduct] = useState(null);\r\n      \r\n      const menu = products.products.map((product)=>{\r\n        return(\r\n            <div  className='col-12 col-md-4 col-lg-3 m-1 ' key={product._id}>\r\n               <RenderMenuItem product={product} onProductSelected={setSelectedProduct}/>\r\n            </div>\r\n        );\r\n     });\r\n     if (products.isLoading) {\r\n      return(\r\n          <div className=\"container\">\r\n              <div className=\"row\">            \r\n                  <div className=\"col-12 mt-5\">\r\n                        <Loading />\r\n                  </div>\r\n              </div>\r\n          </div>\r\n      );\r\n  }\r\n  else if (products.errMess) {\r\n      return(\r\n          <div className=\"container\">\r\n              <div className=\"row\"> \r\n                  <div className=\"col-12\">\r\n                      <h4 className='error-message'>{products.errMess}</h4>\r\n                  </div>\r\n              </div>\r\n          </div>\r\n      );\r\n  }else{\r\n         return(\r\n            <div className=\"container\">\r\n               <div className=\"row\">\r\n               <Breadcrumb className='bread-crumb'>\r\n                  <BreadcrumbItem><Link to='/home'>Home</Link></BreadcrumbItem>\r\n                  <BreadcrumbItem active>Menu</BreadcrumbItem>\r\n               </Breadcrumb>\r\n               </div>\r\n               <div className=\"row\" >\r\n                    <div className=\"col-12\">\r\n                        <h2 >Menu</h2>\r\n                        <hr className='mb-5' />\r\n                    </div>\r\n               </div>\r\n               <div className=\"row products-menu\">\r\n                    {menu}\r\n               </div>\r\n            </div>      \r\n      );\r\n  }\r\n    \r\n}\r\n\r\nexport default Menu;","import {Navbar, NavbarBrand, Jumbotron, NavItem, Nav, Collapse, NavbarToggler, Button , Input , Label , Modal, ModalBody, ModalHeader, Form, FormGroup} from 'reactstrap';\r\nimport {NavLink} from 'react-router-dom';\r\nimport {Component} from 'react';\r\nimport { BoxArrowInRight , BoxArrowRight } from 'react-bootstrap-icons';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport {Link} from 'react-router-dom';\r\nimport React from 'react';\r\nimport {imageUrl} from '../shared/baseUrl'\r\n\r\nconst StyledMenu = withStyles({\r\n    paper: {\r\n      border: '1px solid #d3d4d5',\r\n    },\r\n  })((props) => (\r\n    <Menu\r\n      elevation={0}\r\n      getContentAnchorEl={null}\r\n      anchorOrigin={{\r\n        vertical: 'bottom',\r\n        horizontal: 'center',\r\n      }}\r\n      transformOrigin={{\r\n        vertical: 'top',\r\n        horizontal: 'center',\r\n      }}\r\n      {...props}\r\n    />\r\n  ));\r\n  const StyledMenuItem = withStyles((theme) => ({\r\n    root: {\r\n      '&:focus': {\r\n        backgroundColor: theme.palette.primary.main,\r\n        '& .MuiListItemIcon-root, & .MuiListItemText-primary': {\r\n          color: theme.palette.common.white,\r\n        },\r\n      },\r\n    },\r\n  }))((props) => (<MenuItem {...props}/>));\r\n\r\n\r\nexport default class Header extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        \r\n        this.state = {\r\n            isNavOpen: false,\r\n            isModalOpen: false,\r\n            anchorEl: null\r\n        };\r\n        this.toggleNav = this.toggleNav.bind(this);\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleLogin = this.handleLogin.bind(this);\r\n        this.handleLogout = this.handleLogout.bind(this);\r\n        this.closeNav = this.closeNav.bind(this);\r\n        this.handleClick = this.handleClick.bind(this);\r\n        this.handleClose = this.handleClose.bind(this);\r\n        this.handleProfileSettings = this.handleProfileSettings.bind(this);\r\n        this.handleSignout = this.handleSignout.bind(this);\r\n    }\r\n   \r\n    \r\n    toggleNav = ()=>{\r\n        this.setState({\r\n            isNavOpen: !this.state.isNavOpen\r\n          });\r\n          setTimeout(()=>{console.log('toggleModal', this.state)},3000)\r\n    }\r\n    toggleModal() {\r\n        this.setState({\r\n          isModalOpen: !this.state.isModalOpen\r\n        });\r\n        setTimeout(()=>{console.log('toggleModal', this.state)},3000)\r\n      }\r\n     handleLogin =(event)=> {\r\n        this.toggleModal();\r\n        this.props.loginUser({username: this.username.value, password: this.password.value});\r\n        event.preventDefault();\r\n\r\n    }\r\n    \r\n    handleLogout() {\r\n        this.props.logoutUser();\r\n    }\r\n\r\n    closeNav(){\r\n        if(this.state.isNavOpen)\r\n        this.setState({\r\n            isNavOpen: !this.state.isNavOpen\r\n          });     \r\n    }\r\n    \r\n    handleClick = (event) => {\r\n        this.setState({\r\n            anchorEl: event.currentTarget\r\n        }); \r\n      };\r\n\r\n      handleClose = () => {\r\n        this.setState({\r\n            anchorEl: null\r\n        }); \r\n      };\r\n\r\n      handleProfileSettings = () =>{\r\n        this.handleClose();\r\n      }\r\n\r\n      handleSignout = () => {\r\n        this.handleLogout();\r\n        this.handleClose();\r\n\r\n      }\r\n\r\n    render() {\r\n        return(\r\n            <> \r\n                <Navbar dark expand='md' className='navbar'>\r\n                    <div className=\"container\">\r\n                        <NavbarToggler onClick={this.toggleNav}/>\r\n                        {\r\n                            this.props.auth.isAuthenticated ?\r\n                                <NavbarBrand className=\"d-none d-md-block\" href=\"/\"><img src=\"/easymarket1/logo192.png\" width='50px' height='50px' alt=\"easy market logo\" /></NavbarBrand>\r\n                            :\r\n                                <NavbarBrand href=\"/\"><img src=\"/easymarket1/logo192.png\" width='50px' height='50px' alt=\"easy market logo\" /></NavbarBrand>\r\n\r\n                            \r\n                        }\r\n                        {   this.props.auth.isAuthenticated &&\r\n                            <Avatar  aria-haspopup=\"true\"  variant=\"contained\" className=\"d-md-none\"\r\n                                     className=\"d-block d-md-none user-avatar-small-screen\" alt={this.props.auth.userFirstname} src={ imageUrl + this.props.auth.userImage} />\r\n                                     }\r\n                        <Collapse isOpen={this.state.isNavOpen} navbar>\r\n                            <Nav navbar>\r\n                                <NavItem className='m-2' onClick={this.closeNav}>\r\n                                    <NavLink className='nav-link' to=\"/home\">Home</NavLink>\r\n                                </NavItem>\r\n                                <NavItem className='m-2' onClick={this.closeNav}>\r\n                                    <NavLink className='nav-link' to=\"/menu\">Menu</NavLink>\r\n                                </NavItem>\r\n                                <NavItem className='m-2' onClick={this.closeNav}>\r\n                                    <NavLink className='nav-link' to=\"/aboutus\">About</NavLink>\r\n                                </NavItem>\r\n                                <NavItem className='m-2' onClick={this.closeNav}>\r\n                                    <NavLink className='nav-link' to=\"/contactus\">Contact</NavLink>\r\n                                </NavItem>\r\n                                { this.props.auth.isAuthenticated &&\r\n                                <NavItem className='m-2' onClick={this.closeNav}>\r\n                                    <NavLink className='nav-link' to=\"/favorites\">Favorites</NavLink>\r\n                                </NavItem>\r\n                                }\r\n                                { this.props.auth.isAuthenticated &&\r\n                                <NavItem className='d-block d-md-none  m-2' onClick={this.closeNav}>\r\n                                    <NavLink className='nav-link' to=\"/profile-settings\">Profile Settings</NavLink>\r\n                                </NavItem>\r\n                                }\r\n                                { this.props.auth.isAuthenticated &&\r\n                                <NavItem className='d-block d-md-none  m-2' onClick={this.handleSignout}>\r\n                                    <NavLink className='nav-link' to='/' onClick={this.closeNav}>Signout</NavLink>\r\n                                </NavItem>\r\n                                }\r\n                                \r\n                            </Nav>\r\n                            \r\n                        </Collapse>                        \r\n                    </div>  \r\n                    <Nav className=\"ml-auto\" navbar>\r\n                        <NavItem>\r\n                            {\r\n                                !this.props.auth.isAuthenticated ?\r\n                                <Button   onClick={this.toggleModal} color=\"link\" className='btn-login'><BoxArrowInRight/> Login</Button>\r\n                                :\r\n                                <div className=\"d-none d-md-block\">\r\n                                    <Avatar aria-controls=\"customized-menu\" aria-haspopup=\"true\" onClick={this.handleClick} variant=\"contained\"\r\n                                     className=\"user-avatar\" alt={this.props.auth.userFirstname} src={ imageUrl + this.props.auth.userImage} />\r\n                                    <StyledMenu\r\n                                            id=\"customized-menu\"\r\n                                            anchorEl={this.state.anchorEl}\r\n                                            keepMounted\r\n                                            open={Boolean(this.state.anchorEl)}\r\n                                            onClose = {this.handleClose} \r\n                                        > \r\n                                            <StyledMenuItem  onClick={this.handleProfileSettings}>\r\n                                                <ListItemIcon>\r\n                                                    <SettingsIcon fontSize=\"small\"  />\r\n                                                </ListItemIcon>\r\n                                                <Link to=\"/profile-settings\" class=\"profile-settings-text-dropdown-menu\"><ListItemText primary=\" Profile Settings\" /></Link>\r\n                                            </StyledMenuItem>\r\n                                            <StyledMenuItem onClick={this.handleSignout}  >\r\n                                                <ListItemIcon >\r\n                                                    <BoxArrowRight size=\"18px\" />\r\n                                                </ListItemIcon>\r\n                                                <ListItemText primary=\"Signout\"  />\r\n                                            </StyledMenuItem>\r\n                                        </StyledMenu>\r\n                                    </div>\r\n                            }\r\n                        </NavItem>\r\n                    </Nav> \r\n                </Navbar>\r\n                <Jumbotron>\r\n                    <div className=\"container\">\r\n                        <div className=\"row row-header\">\r\n                            <div className=\"col-12 col-sm-6\">\r\n                                <h1 className='header-title'>Easy Market</h1>\r\n                                <p className='header-subtitle'>We take inspiration from the World's best markets, and create a unique  experience. Hope you enjoy the experience.</p>\r\n                            </div>\r\n                            <div className=\"d-none d-md-block col-md-6 jumptron-logo-img\">\r\n                                <img src=\"/easymarket1/logo512.png\" alt=\"logo\" width=\"200px\" />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Jumbotron>\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\r\n                    <ModalBody>\r\n                        <Form onSubmit={this.handleLogin}>\r\n                                <FormGroup>\r\n                                    <Label htmlFor=\"username\">Username</Label>\r\n                                    <Input type=\"text\" id=\"username\" name=\"username\"\r\n                                        innerRef={(input) => this.username = input} />\r\n                                </FormGroup>\r\n                                <FormGroup>\r\n                                    <Label htmlFor=\"password\">Password</Label>\r\n                                    <Input type=\"password\" id=\"password\" name=\"password\"\r\n                                        innerRef={(input) => this.password = input}  />\r\n                                </FormGroup>\r\n                               \r\n                                <br />\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-6 mt-2\">\r\n                                        <Link to=\"/signup\" onClick={this.toggleModal}>Create Account</Link>\r\n                                    </div>\r\n                                    <div className=\"col-6\">\r\n                                        <Button type=\"submit\" value=\"submit\" color=\"primary\" className='login-button'>Login</Button>\r\n                                    </div>\r\n                                </div>\r\n                            </Form>\r\n                    </ModalBody>\r\n                </Modal>   \r\n            </>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport { MDBIcon, MDBContainer } from 'mdbreact';\r\n\r\nconst SocialButtons = () => {\r\n  return (\r\n    <MDBContainer>\r\n      <a href=\"http://www.facebook.com/profile.php?id=\"  className=\"fb-ic mr-3\">\r\n        <MDBIcon fab icon=\"facebook-f\" />\r\n      </a>\r\n      <a href=\"http://twitter.com/\" className=\"tw-ic mr-3\">\r\n        <MDBIcon fab icon=\"twitter\" />\r\n      </a>\r\n      <a href=\"http://google.com/+\" className=\"gplus-ic mr-3\">\r\n        <MDBIcon fab icon=\"google-plus-g\" />\r\n      </a>\r\n      <a href=\"http://www.linkedin.com/in/\" className=\"li-ic mr-3\">\r\n        <MDBIcon fab icon=\"linkedin-in\" />\r\n      </a>\r\n      <a href=\"https://www.instagram.com/accounts/login/\" className=\"ins-ic mr-3\">\r\n        <MDBIcon fab icon=\"instagram\" />\r\n      </a>\r\n      {/* <a href=\"#!\" className=\"pin-ic mr-3\">\r\n        <MDBIcon fab icon=\"pinterest\" />\r\n      </a> */}\r\n      <a href=\"http://youtube.com/\" className=\"yt-ic mr-3\">\r\n        <MDBIcon fab icon=\"youtube\" />\r\n      </a>\r\n      {/* <a href=\"#!\" className=\"vk-ic mr-3\">\r\n        <MDBIcon fab icon=\"vk\" />\r\n      </a> */}\r\n      {/* <a href=\"#!\" className=\"so-ic mr-3\">\r\n        <MDBIcon fab icon=\"stack-overflow\" />\r\n      </a> */}\r\n      {/* <a href=\"#!\" className=\"slack-ic mr-3\">\r\n        <MDBIcon fab icon=\"slack\" />\r\n      </a> */}\r\n      <a href=\"https://github.com/\" className=\"git-ic mr-3\">\r\n        <MDBIcon fab icon=\"github\" />\r\n      </a>\r\n      {/* <a href=\"#!\" className=\"comm-ic mr-3\">\r\n        <MDBIcon icon=\"comments\" />\r\n      </a> */}\r\n      {/* <a href=\"#!\" className=\"email-ic mr-3\">\r\n        <MDBIcon icon=\"envelope\" />\r\n      </a> */}\r\n      {/* <a href=\"#!\" className=\"dribbble-ic mr-3\">\r\n        <MDBIcon fab icon=\"dribbble\" />\r\n      </a> */}\r\n    </MDBContainer>\r\n  );\r\n}\r\n\r\nexport default SocialButtons;","import { Envelope, TelephoneFill } from 'react-bootstrap-icons';\r\nimport SocialButtons from './SocialButtonsComponent';\r\nimport {Link} from 'react-router-dom';\r\n\r\nexport default function (props) {\r\n    return(\r\n        <div className=\"footer\">\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-4 offset-1 col-sm-2\">\r\n                        <h5>Easy Market</h5>\r\n                        <ul className=\"list-unstyled\">\r\n                            <li><Link to=\"/home\">Home</Link></li>\r\n                            <li><Link to=\"/menu\">Menu</Link></li>\r\n                            <li><Link to=\"/aboutus\">About Us</Link></li>\r\n                            <li><Link to=\"/contactus\">Contact Us</Link></li>\r\n                            {\r\n                                props.isAuthenticated &&\r\n                                <li><Link to=\"/favorites\">Favorites</Link></li>\r\n                            }\r\n                        </ul>\r\n                    </div>\r\n                    <div className=\"col-7 col-sm-5 pr-0\">\r\n                        <h5>Our Address</h5>\r\n                        <address>\r\n                            641, Clear Weather Day Street<br />\r\n\t\t                    Clear Weather Day, Office<br />\r\n                            Spain, Barcelona <br />\r\n                            <TelephoneFill/> : +34 1234 5678<br />\r\n                            <Envelope/> : <a href=\"mailto:easymarket@market.net\">\r\n                            easymarket@market.net</a>\r\n                        </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-4 social-custom\">\r\n                        <SocialButtons/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row justify-content-center row-copyright\">\r\n                    <div className=\"col-auto\">\r\n                        <p><p>© Copyright 2021 Easy Market</p></p>\r\n                    </div>\r\n                </div>\r\n             </div>\r\n        </div>\r\n    );\r\n}","import {Card, CardImg, CardText, CardBody, CardTitle, CardSubtitle} from 'reactstrap';\r\nimport { Loading } from './LoadingComponent';\r\nimport { FadeTransform } from 'react-animation-components';\r\nimport { imageUrl } from '../shared/baseUrl';\r\n\r\nfunction RenderCard({item,isLoading, errMess}){\r\n    if (isLoading) {\r\n        return(\r\n                <Loading />\r\n        );\r\n    }\r\n    else if (errMess) {\r\n        return(\r\n                <h4 className='error-message'>{errMess}</h4>\r\n        );\r\n    }\r\n    else {\r\n        return (\r\n            <FadeTransform in transformProps={{exitTransform: 'scale(2) translateY(-50%)'}}>\r\n                <Card>\r\n                    <CardImg src={imageUrl + item.image} alt={item.name}/>\r\n                    <CardBody>\r\n                        <CardTitle>{item.name}</CardTitle>\r\n                        {item.designation ? <CardSubtitle>{item.designation}</CardSubtitle> : null}\r\n                        <CardText>{item.description}</CardText>\r\n                    </CardBody>\r\n                </Card>\r\n\r\n\r\n            </FadeTransform>\r\n        );\r\n    }\r\n    \r\n}\r\n\r\nfunction Home(props){\r\n   \r\n\r\n    return(\r\n        <div className=\"container p-5\">\r\n            <div className=\"row\">\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.product} isLoading={props.productsLoading} errMess={props.productsErrMess}/>\r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.promotion} isLoading={props.promoLoading} errMess={props.promoErrMess}/>\r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.leader} isLoading={props.leaderLoading} errMess={props.leaderErrMess}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;","import React, { Component } from 'react';\r\nimport { Map, GoogleApiWrapper, InfoWindow, Marker } from 'google-maps-react';\r\n\r\nconst mapStyles = {\r\n  width: '100%',\r\n  height: '100%'\r\n};\r\n\r\nexport class MapContainer extends Component {\r\n    state = {\r\n        showingInfoWindow: false,  // Hides or shows the InfoWindow\r\n        activeMarker: {},          // Shows the active marker upon click\r\n        selectedPlace: {}          // Shows the InfoWindow to the selected place upon a marker\r\n      };\r\n      onMarkerClick = (props, marker, e) =>\r\n    this.setState({\r\n      selectedPlace: props,\r\n      activeMarker: marker,\r\n      showingInfoWindow: true\r\n    });\r\n\r\n  onClose = props => {\r\n    if (this.state.showingInfoWindow) {\r\n      this.setState({\r\n        showingInfoWindow: false,\r\n        activeMarker: null\r\n      });\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <Map\r\n        google={this.props.google}\r\n        zoom={14}\r\n        style={mapStyles}\r\n        initialCenter={\r\n          {\r\n            lat: 41.39334,\r\n            lng:  2.15075\r\n          }\r\n        }\r\n      >\r\n          <Marker\r\n          onClick={this.onMarkerClick}\r\n          name={'Kenyatta International Convention Centre'}\r\n        />\r\n        <InfoWindow\r\n          marker={this.state.activeMarker}\r\n          visible={this.state.showingInfoWindow}\r\n          onClose={this.onClose}\r\n        >\r\n          <div>\r\n            <h4>{this.state.selectedPlace.name}</h4>\r\n          </div>\r\n        </InfoWindow>\r\n      </Map>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GoogleApiWrapper(\r\n    (props) => ({\r\n      \r\n    }\r\n  ))(MapContainer)","import {Component} from 'react';\r\nimport { Envelope, TelephoneFill, Skype } from 'react-bootstrap-icons';\r\nimport  Map  from './MapComponent';\r\nimport {BreadcrumbItem, Breadcrumb, Label, Col, Row, Button } from 'reactstrap';\r\nimport {Link} from 'react-router-dom';\r\nimport {Control, Errors, Form} from 'react-redux-form';\r\n\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val)=> !(val) || (val.length <= len);\r\nconst minLength =(len) => (val) => !(val) || (val.length >= len);\r\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\nconst isNumber = (val) => !isNaN(Number(val));\r\n\r\n\r\nexport default class Contact extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            values:{}\r\n        }\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleSubmit(values){\r\n        this.setState({\r\n            values: values\r\n        });\r\n        this.props.postFeedback(values.firstname, values.lastname, values.email, values.telnum, values.agree, values.contactType, values.message);\r\n        this.props.resetFeedbackForm();\r\n    }\r\n    \r\n    \r\n   \r\n    render(){\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb className=\"bread-crumb\">\r\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h2>Contact Us</h2>\r\n                        <hr />\r\n                    </div>                \r\n                </div>\r\n                <div className=\"row mt-5\">\r\n                    <div className=\"col-12 col-sm-4 col-offset-1\">\r\n                        <h5>Our Address</h5>\r\n                        <address>\r\n                                641, Clear Weather Day Street<br />\r\n                                Clear Weather Day, Office<br />\r\n                                Spain, Barcelona <br />\r\n                                <TelephoneFill/> : +34 1234 5678<br />\r\n                                <Envelope/> : <a href=\"mailto:easymarket@market.net\">\r\n                                easymarket@market.net</a>\r\n                        </address>\r\n                        <div className=\"btn-group\" role=\"group\">\r\n                            <a role='button' className='btn btn-primary' href=\"tel:+3412345678\"><TelephoneFill/> Call</a>\r\n                            <a role='button' className='btn btn-info' href='https://www.skype.com/nl/features/skype-web/'><Skype/> Skype</a>\r\n                            <a role='button' className='btn btn-success' href=\"mailto:easymarket@market.net\"><Envelope/> Email</a>\r\n                        </div>\r\n                    </div>\r\n                    <div className='col-12 col-md-6 d-none d-md-block col-offset-1'>\r\n                        <Map/>\r\n                    </div>\r\n                    \r\n                </div>\r\n                <div className=\"row\">\r\n                    <hr />\r\n                </div>\r\n                {\r\n                    this.props.isAuthenticated &&\r\n                    <div className=\"row row-content\">\r\n                   <div className=\"col-12 mt-5\">\r\n                      <h3>Send us your Feedback</h3>\r\n                      <hr />\r\n                   </div>\r\n                    <div className=\"col-12 col-md-9\">\r\n                        <Form model='feedback' onSubmit={(values) => this.handleSubmit(values)}>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\r\n                                        placeholder=\"First Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{required, minLength:minLength(3), maxLength:maxLength(15)}}\r\n                                        />\r\n                                        <Errors\r\n                                            className='text-danger'\r\n                                            model='.firstname'\r\n                                            show='touched'\r\n                                            messages={{\r\n                                                required:'Required',\r\n                                                minLength: 'Must be greater than 2 characters',\r\n                                                maxLength: 'Must be less than 15 characters'\r\n                                            }}\r\n                                        />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\r\n                                        placeholder=\"Last Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{required, minLength:minLength(3), maxLength:maxLength(15)}}\r\n                                         />\r\n                                         <Errors\r\n                                            className='text-danger'\r\n                                            model='.lastname'\r\n                                            show='touched'\r\n                                            messages={{\r\n                                                required:'Required',\r\n                                                minLength: 'Must be greater than 2 characters',\r\n                                                maxLength: 'Must be less than 15 characters'\r\n                                            }}\r\n                                        />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\r\n                                        placeholder=\"Tel. Number\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15), isNumber\r\n                                        }}\r\n                                         />\r\n                                          <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".telnum\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 numbers',\r\n                                            maxLength: 'Must be 15 numbers or less',\r\n                                            isNumber: ' Must be a number'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                               \r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\r\n                                        placeholder=\"Email\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, validEmail\r\n                                        }} />\r\n                                        <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".email\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            validEmail: ' Invalid Email Address'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size: 6, offset: 2}}>\r\n                                    <div className=\"form-check\">\r\n                                        <Label check>\r\n                                            <Control.checkbox model=\".agree\" name=\"agree\"\r\n                                                className=\"form-check-input\"\r\n                                                 /> {' '}\r\n                                                <strong>May we contact you?</strong>\r\n                                        </Label>\r\n                                    </div>\r\n                                </Col>\r\n                                <Col md={{size: 3, offset: 1}}>\r\n                                    <Control.select model=\".contactType\" name=\"contactType\"\r\n                                        className=\"form-control\">\r\n                                        <option>Tel.</option>\r\n                                        <option>Email</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\r\n                                <Col md={10}>\r\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\"\r\n                                        rows=\"12\"\r\n                                        className=\"form-control\" />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size:10, offset: 2}}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                    Send Feedback\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}","import {Modal, ModalHeader, ModalBody, Button, Label} from 'reactstrap';\r\nimport{LocalForm, Control, Errors} from 'react-redux-form';\r\nimport BeautyStars from 'beauty-stars';\r\nimport {useState} from 'react';\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val)=> !(val) || (val.length <= len);\r\nconst minLength =(len) => (val) => !(val) || (val.length >= len);\r\n\r\nexport default function CommentForm({toggleModal,isModalOpen,productId,postComment}){\r\n    const [rating,setRating] = useState(1);\r\n    const handleSubmit = (values)=>{\r\n        toggleModal();\r\n        postComment(productId,rating, values.comment);\r\n    }\r\n\r\n    return(\r\n        <Modal isOpen={isModalOpen} toggle={toggleModal}>\r\n            <ModalHeader toggle={toggleModal}>Header</ModalHeader>\r\n            <ModalBody>\r\n                <LocalForm onSubmit={handleSubmit}>\r\n                    <div className='form-group'>\r\n                        <Label for='reating'>Rating</Label>\r\n                        {/* <Control.select className='form-control' defaultValue={1} model='.rating' id='rating' name='rating'>\r\n                            <option>1</option>\r\n                            <option>2</option>\r\n                            <option>3</option>\r\n                            <option>4</option>\r\n                            <option>5</option>\r\n                        </Control.select> */}\r\n                        <div className=\"rating-bar-comment-form-component\">\r\n                            <BeautyStars inactiveColor=\"#e0e0d1\" \r\n                                value={rating}\r\n                                onChange={value => setRating(value)}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    {/* <div className='form-group'>\r\n                        <Label for='author'>You Name</Label>\r\n                        <Control.text className='form-control'  model='.author' id='author' name='author' placeholder='Your Name' validators={{required, minLength:minLength(3), maxLength:maxLength(15)}}/>\r\n                        <Errors className='text-danger' model='.author' show='touched' messages={{\r\n                            required:'Required',\r\n                            minLength: 'Must be greater than 2 characters',\r\n                            maxLength: 'Must be 15 characters or less'\r\n                        }}/>\r\n                    </div> */}\r\n                    <div className='form-group'>\r\n                        <Label for='comment'>Comment</Label>\r\n                        <Control.textarea model='.comment' id='comment' name='comment' className='form-control' rows='7'/>\r\n                    </div>\r\n                    <Button color='primary'  type='submit'>Submit</Button>\r\n                </LocalForm>\r\n            </ModalBody>\r\n        </Modal>\r\n    );\r\n}","import React, { Component } from 'react';\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport { styled } from '@material-ui/core/styles';\r\nimport StarRounded from '@material-ui/icons/StarRounded';\r\nimport {Progress} from 'reactstrap';\r\n\r\n\r\nconst StyledRating = styled(Rating)({\r\n    '& .MuiRating-iconFilled': {\r\n      color: '#FFED76',\r\n    },\r\n    '& .MuiRating-iconEmpty': {\r\n      color: '#e0e0d1',\r\n    },\r\n  });\r\n\r\nconst RatingChart= ({commentsArray})=> {\r\n    const ratingArray = [0,0,0,0,0];\r\n    for(var i = 0 ; i < commentsArray.length ; i++) {\r\n        \r\n        switch(commentsArray[i].rating){\r\n            case 1:\r\n                ratingArray[0] = ratingArray[0] + 1;\r\n                break;\r\n            case 2: \r\n                ratingArray[1] = ratingArray[1] + 1;\r\n                break;\r\n            case 3: \r\n                ratingArray[2] = ratingArray[2] + 1;\r\n                break;\r\n            case 4: \r\n                ratingArray[3] = ratingArray[3] + 1;\r\n                break;\r\n            case 5: \r\n                ratingArray[4] = ratingArray[4] + 1;\r\n                break;\r\n            default: ;\r\n        }\r\n    }\r\n    var totalRating = 0;\r\n    for (var i = 0; i < ratingArray.length; i++){\r\n        totalRating = totalRating + (i+1) * ratingArray[i];\r\n    }\r\n\r\n    const numofRatings = commentsArray.length;\r\n    totalRating = totalRating / numofRatings;\r\n    const fiveStarsPercent = (ratingArray[4] / numofRatings) * 100; \r\n    const fourStarsPercent = (ratingArray[3] / numofRatings) * 100; \r\n    const threeStarsPercent = (ratingArray[2] / numofRatings) * 100; \r\n    const twoStarsPercent = (ratingArray[1] / numofRatings) * 100; \r\n    const oneStarsPercent = (ratingArray[0] / numofRatings) * 100; \r\n \r\n    return (\r\n        <div className='container'>\r\n            <div className='row'>\r\n                <div className='col-12'>\r\n                    <h4 className='align-text-center'>\r\n                        {(totalRating).toFixed(2)}\r\n                    </h4>\r\n                    <div className='align-text-center'>\r\n                        <StyledRating \r\n                            name=\"customized-color\"\r\n                            defaultValue={totalRating}\r\n                            readOnly={true}\r\n                            precision={0.2}\r\n                            icon={<StarRounded fontSize=\"inherit\" />}\r\n                            emptyIcon={<StarRounded fontSize=\"inherit\" />}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                        <div className=\"col-12\">\r\n                            <div className=\"chart-num\">5</div>\r\n                            <StarRounded className='chart-star'/>\r\n                            <div className=\"col-9 progress-chart\">\r\n                                <Progress value={fiveStarsPercent}/>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-12\">\r\n                            <div className=\"chart-num\"> 4</div>\r\n                            <StarRounded className='chart-star'/>\r\n                            <div className=\"col-9 progress-chart\">\r\n                                <Progress value={fourStarsPercent}/>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-12\">\r\n                            <div className=\"chart-num\"> 3</div>\r\n                            <StarRounded className='chart-star'/>\r\n                            <div className=\"col-9 progress-chart\">\r\n                                <Progress value={threeStarsPercent}/>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-12\">\r\n                            <div className=\"chart-num\"> 2</div>\r\n                            <StarRounded className='chart-star'/>\r\n                            <div className=\"col-9 progress-chart\">\r\n                                <Progress value={twoStarsPercent}/>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-12\">\r\n                            <div className=\"chart-num\">  1</div>\r\n                            <StarRounded className='chart-star'/>\r\n                            <div className=\"col-9 progress-chart\">\r\n                                <Progress value={oneStarsPercent}/>\r\n                            </div>\r\n                        </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RatingChart;","import {\r\n    Card, CardImg, CardImgOverlay,\r\n    CardTitle,CardText, Breadcrumb, BreadcrumbItem, Button\r\n  } from 'reactstrap';\r\nimport {Link} from 'react-router-dom';\r\nimport {Pencil} from 'react-bootstrap-icons';\r\nimport CommentForm from './CommentFormComponent';\r\nimport {useState} from 'react';\r\nimport { Loading } from './LoadingComponent';\r\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\r\nimport { imageUrl } from '../shared/baseUrl';\r\nimport {SuitHeartFill , SuitHeart} from 'react-bootstrap-icons';\r\nimport RatingChart  from './RatingChartComponent';\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport { styled } from '@material-ui/core/styles';\r\nimport StarRounded from '@material-ui/icons/StarRounded';\r\nimport Avatar from '@material-ui/core/Avatar';\r\n\r\nconst StyledRating = styled(Rating)({\r\n    '& .MuiRating-iconFilled': {\r\n      color: '#FFED76',\r\n    },\r\n    '& .MuiRating-iconEmpty': {\r\n      color: '#e0e0d1',\r\n    },\r\n  });\r\n\r\n\r\nfunction RenderProduct({product, favorite, postFavorite, deleteFavorite, isAuthenticated}){\r\n    return(\r\n        <FadeTransform in transformProps={{exitTransform: 'scale(2) translateY(-50%)'}}>\r\n            <div>\r\n                <Card >\r\n                    <CardImg  className='product-details-img' src={ imageUrl + product.image} alt={product.name}/>\r\n                            {\r\n                                isAuthenticated && \r\n                                <CardImgOverlay>\r\n                                    <Button outline color=\"primary\" onClick={() => favorite ? deleteFavorite(product._id) : postFavorite(product._id)}>\r\n                                        {\r\n                                            favorite ?\r\n                                            <SuitHeartFill/>\r\n                                            : \r\n                                            <SuitHeart/>\r\n                                        }\r\n                                    </Button>\r\n                                </CardImgOverlay>\r\n                            }\r\n                    \r\n                </Card>\r\n                <div className='mt-5'>\r\n                    <h5>{product.name}</h5>\r\n                </div>\r\n                <hr />\r\n                <div>\r\n                    <p>Price: {(product.price/100).toFixed(2) +'€'}</p>\r\n                </div>\r\n                <div className='mt-5'>\r\n                    <p>{product.description}</p>\r\n                </div>\r\n            </div>\r\n        </FadeTransform>\r\n\r\n            );\r\n}\r\n\r\nfunction RenderComments({commentsList, commentsErrMess}){\r\n    console.log('commentsList' ,commentsList);\r\n    if(commentsErrMess){\r\n        return(<h4 className='error-message'>{commentsErrMess}</h4>);\r\n    }else\r\n    if(commentsList.length > 0){\r\n        const comments = commentsList.map(comment =>{\r\n            \r\n            return(\r\n                    <Fade in>\r\n                        <div  key={comment._id}>\r\n                            <Card className='product-comment-card'>\r\n                            <div className='row'>\r\n                                         <div className='col-1'>\r\n                                             <Avatar  aria-haspopup=\"true\"  variant=\"contained\" \r\n                                                className=\"user-avatar-small-screen\" alt={comment.author.username} src={ imageUrl + comment.author.image} />\r\n                                     \r\n                                         </div>\r\n                                         <div className='col-11'>\r\n                                         <CardTitle  className='card-title-product-detail'>{comment.author.username}</CardTitle>\r\n\r\n                                         </div>\r\n                                     </div>\r\n                                <StyledRating \r\n                                        name=\"customized-color\"\r\n                                        defaultValue={comment.rating}\r\n                                        readOnly={true}\r\n                                        precision={0.2}\r\n                                        icon={<StarRounded fontSize=\"inherit\" />}\r\n                                        emptyIcon={<StarRounded fontSize=\"inherit\" />}\r\n                                />\r\n                                \r\n                                <CardText>{comment.comment}</CardText>\r\n                                <CardText>\r\n                                    <small className=\"text-muted\">{new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit'}).format(new Date(Date.parse(comment.createdAt)))}</small>\r\n                                </CardText>\r\n                            </Card>\r\n                        </div>\r\n                    </Fade>                  \r\n            );\r\n        });\r\n        return(\r\n            <>\r\n                <h4>Reviews</h4>\r\n                <hr />\r\n                <Stagger in>\r\n                    {comments}\r\n                </Stagger>\r\n            </>\r\n        );\r\n    }else{\r\n        return(<div></div>);\r\n    }\r\n\r\n}\r\n\r\nconst ProductDetails = ({product,productComments,errMess,isLoading,commentsErrMess,postComment,favorite ,postFavorite, deleteFavorite, isAuthenticated})=>{\r\n    const [isCommentFormModalOpen,setIsCommentFormModalOpen] = useState(false);\r\n    const toggleCommentFormModal =()=>{\r\n        setIsCommentFormModalOpen(!isCommentFormModalOpen);     \r\n    }\r\n    if (isLoading) {\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">            \r\n                    <div className=\"col-12 mt-5\">\r\n                        <Loading />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if (errMess) {\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">            \r\n                    <h4 className='error-message'>{errMess}</h4>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if (product != null) {\r\n         \r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb className='bread-crumb'>\r\n                        <BreadcrumbItem><Link to='/home'>Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem><Link to='/menu'>Menu</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>{product.name}</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-12 col-md-4 \" >\r\n                        <RenderProduct product={product} favorite={favorite} postFavorite={postFavorite} \r\n                            deleteFavorite ={deleteFavorite} isAuthenticated={isAuthenticated}/>\r\n                        {productComments.length > 0 && <div> <RatingChart commentsArray={productComments}/> <br /></div>}\r\n                    </div>\r\n                    <div className=\"col-12 col-md-6 \" >\r\n                         { productComments.length > 0 && <RenderComments commentsList={productComments} commentsErrMess={commentsErrMess}/>}\r\n                        { isAuthenticated && <Button className='btn-submit-comment ml-4' outline  color=\"primary\" onClick={toggleCommentFormModal} ><Pencil size=\"20px\"/> Comment</Button>}\r\n                    </div>\r\n                </div>\r\n                <CommentForm toggleModal={toggleCommentFormModal} isModalOpen={isCommentFormModalOpen} productId={product._id} postComment={postComment}/>\r\n            </div>\r\n            \r\n        );\r\n     }\r\n}\r\n\r\nexport default ProductDetails;","import React from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media, Table } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { imageUrl} from '../shared/baseUrl';\r\nimport { Loading } from './LoadingComponent';\r\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\r\n\r\nfunction RenderLeader({leader}){\r\n    \r\n    return(\r\n        <FadeTransform\r\n        in\r\n        transformProps={{\r\n            exitTransform: 'scale(0.5) translateY(-50%)'\r\n        }}>\r\n            <div key={leader._id} className='container mt-3'>\r\n                <div className='row'>\r\n                    <div className='col-12 col-lg-3 align-text-center'>\r\n                        <img src={ imageUrl + leader.image}  width='200px' alt={leader.name} className='img-leader-aboutus'/>\r\n                    </div>\r\n                    <div className='col-12 col-lg-3 align-text-center'>\r\n                        <h3 className='mt-5'>{leader.name}</h3>\r\n                        <p>{leader.designation}</p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-12 mt-3\">\r\n                        <p className='aboutus-leader-description'>{leader.description}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </FadeTransform>\r\n    );\r\n}\r\nfunction About(props) {\r\n    \r\n    let leaders =<div></div>;\r\n    if(props.isLoading){\r\n        leaders = <Loading />;\r\n    }else if(props.errMess) {\r\n        leaders = <h4 className='error-message'>{props.errMess}</h4>;\r\n    }else{\r\n        leaders = props.leaders.map((leader) => {\r\n            return (\r\n                <Fade in>\r\n                    <RenderLeader leader={leader} isLoading={props.isLoading} errMess={props.errMess}/>\r\n                </Fade>\r\n            );\r\n        });\r\n    }\r\n\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <Breadcrumb className='bread-crumb'>\r\n                    <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                    <BreadcrumbItem active>About Us</BreadcrumbItem>\r\n                </Breadcrumb>\r\n                <div className=\"col-12\">\r\n                    <h2>About Us</h2>\r\n                    <hr />\r\n                </div>                \r\n            </div>\r\n            <div className=\"container\">\r\n                \r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12 col-md-6 mt-5\">\r\n                    <h3>Our History</h3>\r\n                    <hr />\r\n                    <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Tenetur, nulla, esse quae officiis itaque blanditiis eaque at accusamus incidunt sunt repellat ipsa adipisci? Vero cumque, est obcaecati modi quam tempore. Lorem ipsum dolor, sit amet consectetur adipisicing elit. Iusto, voluptas? Quidem ipsum quaerat enim voluptatibus quibusdam. Unde, nesciunt! Nostrum saepe recusandae quia tenetur modi nisi est eaque mollitia distinctio nam.</p>\r\n                    <p>Lorem ipsum dolor sit amet <em> consectetur adipisicing elit</em>. Voluptates officia illum tempora, cupiditate corporis in quisquam animi nam possimus tempore repudiandae aspernatur nulla, autem numquam. Earum nisi placeat cum rerum.</p>\r\n                </div>\r\n                <div className=\"col-12 col-md-5 mt-5\">\r\n                    <Card>\r\n                        <CardHeader className=\"bg-primary text-white\">Facts At a Glance</CardHeader>\r\n                        <CardBody>\r\n                            <dl className=\"row p-1\">\r\n                                <dt className=\"col-6\">Started</dt>\r\n                                <dd className=\"col-6\">3 Feb. 2013</dd>\r\n                                <dt className=\"col-6\">Major Stake Holder</dt>\r\n                                <dd className=\"col-6\">Easy Market Inc.</dd>\r\n                                <dt className=\"col-6\">Last Year's Turnover</dt>\r\n                                <dd className=\"col-6\">$1,250,375</dd>\r\n                                <dt className=\"col-6\">Employees</dt>\r\n                                <dd className=\"col-6\">40</dd>\r\n                            </dl>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n                <div className=\"col-12 mt-5\">\r\n                    <Card>\r\n                        <CardBody className=\"bg-faded\">\r\n                            <blockquote className=\"blockquote\">\r\n                                <p className=\"mb-0\">Don't find customers for your product. Find products for your customers.</p>\r\n                                <footer className=\"blockquote-footer\">Seth Godin, \r\n                                <cite title=\"Source Title\"> Lorem ipsum dolor sit amet consectetur adipisicing elit.</cite>\r\n                                </footer>\r\n                            </blockquote>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n            <div className=\"row row-content mt-4\">\r\n                <div className=\"col-12 mt-5\">\r\n                    <h3>Corporate Leadership</h3>\r\n                    <hr />\r\n                </div>\r\n                <div className=\"col-12 mt-5\">\r\n                    <Stagger in>\r\n                        {leaders}\r\n                    </Stagger>\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n               <hr />\r\n            </div>\r\n            <div className=\"row mt-5\">\r\n                    <h3>Facts & Figures</h3>\r\n                    <Table >\r\n                        <thead>\r\n                            <tr>\r\n                            <th></th>\r\n                            <th>2018</th>\r\n                            <th>2019</th>\r\n                            <th>2020</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody className=\"table-body-stripe\">\r\n                            <tr>\r\n                            <th scope=\"row\">Employees</th>\r\n                            <td>15</td>\r\n                            <td>30</td>\r\n                            <td>40</td>\r\n                            </tr>\r\n                            <tr>\r\n                            <th scope=\"row\">Clients Served</th>\r\n                            <td>15000</td>\r\n                            <td>45000</td>\r\n                            <td>100,000</td>\r\n                            </tr>\r\n                            <tr>\r\n                            <th scope=\"row\">Special Events</th>\r\n                            <td>3</td>\r\n                            <td>20</td>\r\n                            <td>45</td>\r\n                            </tr>\r\n                            <tr>\r\n                            <th scope=\"row\">Annual Turnover\t</th>\r\n                            <td>$251,325</td>\r\n                            <td>$1,250,375</td>\r\n                            <td>~$3,000,000</td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </Table>\r\n  \r\n                </div>\r\n                \r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default About;    ","import React, { Component } from 'react';\r\nimport { Media, Breadcrumb, BreadcrumbItem, Button } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { imageUrl } from '../shared/baseUrl';\r\nimport { Loading } from './LoadingComponent';\r\n\r\nfunction RenderMenuItem({ product, deleteFavorite }) {\r\n    return(\r\n        <Media tag=\"li\">\r\n            <Media left middle>\r\n                <Media object src={imageUrl + product.image} alt={product.name} />\r\n            </Media>\r\n            <Media body className=\"ml-5\">\r\n                <Media heading>{product.name}</Media>\r\n                <p>{product.description}</p>\r\n                <Button outline color=\"danger\" onClick={() => deleteFavorite(product._id)}>\r\n                    <span className=\"fa fa-times\"></span>\r\n                </Button>\r\n            </Media>\r\n        </Media>\r\n    );\r\n}\r\n\r\nconst Favorites = (props) => {\r\n    if (props.favorites.isLoading) {\r\n        return(\r\n            <div className=\"container\" className=\"favorites-loading\">\r\n                <div className=\"row\">\r\n                    <Loading />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if (props.favorites.errMess) {\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <h4>{props.favorites.errMess}</h4>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    else if (props.favorites.favorites) {\r\n\r\n        const favorites = props.favorites.favorites.products.map((product) => {\r\n            return (\r\n                <div key={product._id} className=\"col-12 mt-5\">\r\n                    <RenderMenuItem product={product} deleteFavorite={props.deleteFavorite} />\r\n                </div>\r\n            );\r\n        });\r\n\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to='/home'>Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>My Favorites</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>My Favorites</h3>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    {\r\n                        favorites.length >0 ?\r\n                            <Media list>\r\n                                {favorites}\r\n                            </Media>\r\n                        :\r\n                        <div className=\"col-12 empty-favorites-message\">\r\n                        <img src='/easymarket1/oops.png' alt='oops' className='oops-img-favorites-component'/>\r\n                            <p>There is no favorite products ...</p>\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else {\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                        <div className=\"col-12 empty-favorites-message\">\r\n                        <img src='/easymarket1/oops.png' alt='oops' className='oops-img-favorites-component'/>\r\n                            <p>There is no favorite products ...</p>\r\n                        </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Favorites;","import {Component} from 'react';\r\nimport {imageUrl} from '../shared/baseUrl'\r\nimport { Label, Col, Row, Button } from 'reactstrap';\r\nimport {Control, Errors, Form} from 'react-redux-form';\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val)=> !(val) || (val.length <= len);\r\nconst minLength =(len) => (val) => !(val) || (val.length >= len);\r\n\r\n export default class ProfileSettings extends Component  {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state ={\r\n            editUserName : false,\r\n            editFirstName : false,\r\n            editLastName : false,\r\n            setNewPassword : false,\r\n            passwordIsTrue: false,\r\n            passwordNotMatchedErrMess: ''\r\n        }\r\n        this.handleEditUserName = this.handleEditUserName.bind(this);\r\n        this.handleEditFirstName = this.handleEditFirstName.bind(this);\r\n        this.handleEditLastName = this.handleEditLastName.bind(this);\r\n        this.handleSetNewPassword = this.handleSetNewPassword.bind(this);\r\n\r\n\r\n    }\r\n    imageHandler =(e) => {\r\n                let uploadImage =  e.target.files[0];\r\n                let form = new FormData()\r\n                form.append('imageFile',uploadImage)\r\n\r\n                this.props.uploadImage(form);\r\n\r\n    }\r\n\r\n        handleSubmit (values){\r\n            if(this.state.editUserName){\r\n                this.props.updateUser({username: values.username});\r\n                this.setState({editUserName: false});\r\n            }else if(this.state.editFirstName){\r\n                this.props.updateUser({firstname: values.firstname});\r\n                this.setState({editFirstName: false});\r\n            }else if(this.state.editLastName){\r\n                this.props.updateUser({lastname: values.lastname});\r\n                this.setState({editLastName: false});\r\n            }else\r\n            if(this.state.passwordIsTrue && this.state.setNewPassword){\r\n                if(values.newPassword === values.confirmPassword){\r\n                    console.log('Change Password here');\r\n                    this.setState({passwordIsTrue: false, setNewPassword:false});\r\n                }else {\r\n                    this.setState({\r\n                        passwordNotMatchedErrMess: 'Doesn\\'t match ...'\r\n                    });\r\n                }\r\n            }else\r\n            if(this.state.setNewPassword){\r\n                if(values.password === this.props.auth.user.password){\r\n                    this.setState({\r\n                        passwordIsTrue: true,\r\n                    });\r\n                }else{\r\n                    alert('Password is Wrong !');\r\n                }\r\n            }\r\n           \r\n\r\n            this.props.resetProfileSettingsForm();\r\n           \r\n        }\r\n\r\n        handleEditUserName(){\r\n            this.setState({\r\n                editUserName : true,\r\n                editFirstName : false,\r\n                editLastName : false,\r\n                setNewPassword: false,\r\n                passwordIsTrue: false\r\n            });\r\n        }\r\n\r\n        handleEditFirstName(){\r\n            this.setState({\r\n                editFirstName : true,\r\n                editLastName : false,\r\n                editUserName : false,\r\n                setNewPassword: false,\r\n                passwordIsTrue: false\r\n            });\r\n        }\r\n\r\n        handleEditLastName(){\r\n            this.setState({\r\n                editLastName : true,\r\n                editUserName : false,\r\n                editFirstName : false,\r\n                setNewPassword: false,\r\n                passwordIsTrue: false\r\n            });\r\n        }\r\n\r\n        handleSetNewPassword(){\r\n            this.setState({\r\n                editLastName : false,\r\n                editUserName : false,\r\n                editFirstName : false,\r\n                setNewPassword: true,\r\n                passwordIsTrue: false\r\n            });\r\n        }\r\n        render()\r\n        {\r\n            return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-12 \">\r\n                        \r\n                            <img  class=\"imag-center\"\r\n                                        alt={this.props.auth.userFirstname}\r\n                                         src={ imageUrl + this.props.auth.userImage} />\r\n                    \r\n                    </div>\r\n                    <div className='col-12 text-center mt-5'>\r\n                        <Label for='imageFile' className=' change-photo-btn btn' >Change Photo</Label>\r\n                        \r\n                    </div>\r\n                    <input type='file' name='imageFile'  style={{\"visibility\":\"hidden\"}}\r\n                        id='imageFile' accept ='image/*' onChange={this.imageHandler}/>\r\n                       \r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-12 profile-settings-form-container\">\r\n                        <div className=\"col-12 col-md-8 offset-md-1 mt-5\">\r\n                                <Form model='profileSettings' onSubmit={(values) => this.handleSubmit(values)} autocomplete=\"new-password\">\r\n                                    <Row className=\"form-group\">\r\n                                        <Label htmlFor=\"username\" md={3}>Username :</Label>\r\n                                        <Col md={9}>\r\n                                        { this.state.editUserName ?\r\n                                                <Row>\r\n                                                    <Col md={8} className='mt-1'>\r\n                                                            <Control.text model=\".username\" id=\"username\" name=\"username\"\r\n                                                                placeholder=\"Username\"\r\n                                                                className=\"form-control\"\r\n                                                                validators={{required, minLength:minLength(3),\r\n                                                                 maxLength:maxLength(15),\r\n                                                                 usernameExists:(val) => ! this.props.usersnames.includes(val)\r\n                                                                 }}\r\n                                                                />\r\n                                                                <Errors\r\n                                                                    className='text-danger text-left'\r\n                                                                    model='.username'\r\n                                                                    show='touched'\r\n                                                                    messages={{\r\n                                                                        required:'Required',\r\n                                                                        minLength: 'Must be greater than 2 characters',\r\n                                                                        maxLength: 'Must be less than 15 characters',\r\n                                                                        usernameExists: 'username is not available'\r\n                                                                    }}\r\n                                                                />\r\n                                                    </Col>\r\n                                                    <Col md={4}>\r\n                                                        <Button type=\"submit\" className='profile-settings-save-btn' color=\"primary\" size='sm'>\r\n                                                            Save\r\n                                                        </Button>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                                :\r\n                                                <div className=\"row mt-2\">\r\n                                                        <div className=\"col-6 text-left\"><Label className='text-left'>{this.props.auth.user.username}</Label></div>\r\n                                                      <div className=\"col-4 offset-2 text-right profile-settings-edit-link\"><a className='text-right ' onClick={this.handleEditUserName}>Edit Username</a></div>\r\n                                                \r\n                                                </div>\r\n                                                }\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row className=\"form-group\">\r\n                                        <Label htmlFor=\"firstname\" md={3}>First Name :</Label>\r\n                                        <Col md={9}>\r\n                                                {   this.state.editFirstName ?\r\n                                                        \r\n                                                        <Row>\r\n                                                            <Col md={8} className='mt-1'>\r\n                                                            <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\r\n                                                                placeholder=\"First Name\"\r\n                                                                className=\"form-control\"\r\n                                                                validators={{required, minLength:minLength(3), maxLength:maxLength(15)}}\r\n                                                                />\r\n                                                                <Errors\r\n                                                                    className='text-danger text-left'\r\n                                                                    model='.firstname'\r\n                                                                    show='touched'\r\n                                                                    messages={{\r\n                                                                        required:'Required',\r\n                                                                        minLength: 'Must be greater than 2 characters',\r\n                                                                        maxLength: 'Must be less than 15 characters'\r\n                                                                    }}\r\n                                                                />\r\n                                                                </Col>\r\n                                                                <Col md={4}>\r\n                                                                    <Button type=\"submit\" className='profile-settings-save-btn' color=\"primary\" size='sm'>\r\n                                                                        Save\r\n                                                                    </Button>\r\n                                                                </Col>\r\n                                                                </Row>\r\n                                                           \r\n                                                    :\r\n                                                    <div className=\"row mt-2\">\r\n                                                        <div className=\"col-6 text-left\"><Label className='text-left'>{this.props.auth.userFirstname}</Label></div>\r\n                                                      <div className=\"col-4 offset-2 text-right profile-settings-edit-link\"><a className='text-right ' onClick={this.handleEditFirstName}>Edit Firstname</a></div>\r\n                                                    </div>\r\n                                                }\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row className=\"form-group\">\r\n                                        <Label htmlFor=\"lastname\" md={3}>Last Name :</Label>\r\n                                        <Col md={9}>\r\n                                            {       \r\n                                                this.state.editLastName ? \r\n                                                    <Row>\r\n                                                        <Col md={8} className='mt-1'>\r\n                                                            <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\r\n                                                                placeholder=\"Last Name\"\r\n                                                                className=\"form-control\"\r\n                                                                validators={{required, minLength:minLength(3), maxLength:maxLength(15)}}\r\n                                                                />\r\n                                                                <Errors\r\n                                                                    className='text-danger text-left'\r\n                                                                    model='.lastname'\r\n                                                                    show='touched'\r\n                                                                    messages={{\r\n                                                                        required:'Required',\r\n                                                                        minLength: 'Must be greater than 2 characters',\r\n                                                                        maxLength: 'Must be less than 15 characters'\r\n                                                                    }}\r\n                                                                />\r\n                                                        </Col>\r\n                                                        <Col md={4}>\r\n                                                            <Button type=\"submit\" className='profile-settings-save-btn' color=\"primary\" size='sm'>\r\n                                                                Save\r\n                                                            </Button>\r\n                                                        </Col>\r\n                                                    </Row>\r\n                                                :\r\n                                                    <div className=\"row mt-2 \">\r\n                                                        <div className=\"col-6 text-left\"><Label className='text-left'>{this.props.auth.userLastname}</Label></div>\r\n                                                      <div className=\"col-4 offset-2 text-right profile-settings-edit-link\"><a className='text-right ' onClick={this.handleEditLastName}>Edit Lastname</a></div>\r\n                                                    </div>\r\n                                            }        \r\n                                        </Col>\r\n                                    </Row>\r\n                                    {/* <Row className=\"form-group\">\r\n                                        {\r\n                                            this.state.setNewPassword ?\r\n                                                \r\n                                                    <>\r\n                                                        {\r\n                                                            this.state.passwordIsTrue ?\r\n                                                            <><Col md={12}>\r\n                                                                <Row className=\"form-group\">\r\n                                                                    <Label htmlFor=\"newPassword\" md={3}>New Password :</Label>\r\n                                                                    <Col md={7}>\r\n                                                                        <Control.password model=\".newPassword\" id=\"newPassword\" name=\"newPassword\"\r\n                                                                            placeholder=\"New Password\"\r\n                                                                            className=\"form-control\"\r\n                                                                             validators={{required, minLength:minLength(8),\r\n                                                                                 maxLength:maxLength(15), mustContainNumber: (val) => ( !val || /\\d/.test(val)),\r\n                                                                                 mustContainSpecialChar: (val) => (/[`!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?~]/.test(val))}}\r\n                                            \r\n                                                                            />\r\n                                                                            <Errors\r\n                                                                            className=\"text-danger text-left\"\r\n                                                                            model=\".newPassword\"\r\n                                                                            show=\"touched\"\r\n                                                                            messages={{\r\n                                                                                required: 'Required ',\r\n                                                                                minLength: 'Must have length greater of 7 ',\r\n                                                                                maxLength: 'Must be 15 numbers or less ',\r\n                                                                                mustContainNumber: ' Must contain number ',\r\n                                                                                mustContainSpecialChar: 'Must contain a special character'\r\n                                                                            }}\r\n                                                                        />\r\n                                                                    </Col>\r\n                                                                \r\n                                                                </Row>\r\n                                                                </Col>\r\n                                                                <Col md={12}>\r\n                                                                <Row className=\"form-group\">\r\n                                                                <Label htmlFor=\"confirmPassword\" md={3}>Confirm Password :</Label>\r\n                                                                    <Col md={7}>\r\n                                                                        <Control.password model=\".confirmPassword\" id=\"confirmPassword\" name=\"confirmPassword\"\r\n                                                                            placeholder=\"Confirm Password\"\r\n                                                                            className=\"form-control\"\r\n                                                                            />\r\n                                                                           \r\n                                                                    </Col>\r\n                                                                    <Col md={2}>\r\n                                                                        <Button type=\"submit\" className='profile-settings-save-btn' color=\"primary\" size='sm'>\r\n                                                                            Save\r\n                                                                        </Button>\r\n                                                                    </Col>\r\n                                                                </Row>\r\n                                                                <div className='err-validation-password-signup text-left offset-md-3'>\r\n                                                                    <p>{this.state.passwordNotMatchedErrMess}</p>\r\n                                                                </div>\r\n                                                                </Col>\r\n                                                            </>\r\n                                                            :\r\n                                                            <>\r\n                                                            <Label htmlFor=\"password\" md={3}>Enter Password</Label>\r\n                                                            <Col md={7} className='mt-1'>\r\n                                                                <Control.password model=\".password\" id=\"password\" name=\"password\"\r\n                                                                    placeholder=\"Password\"\r\n                                                                    className=\"form-control\"\r\n                                                                   />\r\n                                                            </Col>\r\n                                                            <Col md={2}>\r\n                                                        \r\n                                                                <Button type=\"submit\" className='profile-settings-save-btn' color=\"primary\" size='sm' >\r\n                                                                    Ok\r\n                                                                </Button>\r\n                                                            </Col>\r\n                                                        </>\r\n                                                        }\r\n                                                    </>\r\n                                                \r\n                                            :\r\n                                                <div className=\"profile-settings-set-new-password-link\"><a onClick={this.handleSetNewPassword}>Set New Password</a></div>\r\n                                        }\r\n                                    </Row>\r\n                                 */}\r\n                                </Form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n            </div>\r\n        );}\r\n    \r\n}\r\n","\r\nimport {Component} from 'react';\r\nimport {Label, Col, Row, Button } from 'reactstrap';\r\nimport {Control, Errors, Form} from 'react-redux-form';\r\nimport { EyeSlash, Eye } from 'react-bootstrap-icons';\r\nimport xcvbn from 'zxcvbn';\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val)=> !(val) || (val.length <= len);\r\nconst minLength =(len) => (val) => !(val) || (val.length >= len);\r\n\r\n\r\nexport default class Signup extends Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            values:{},\r\n            showPassword: false,\r\n            passwordErrMess: null,\r\n            passwordStrengthIndicator: 0\r\n        }\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleShowPassword = this.handleShowPassword.bind(this);\r\n        this.handlePasswordOnChange = this.handlePasswordOnChange.bind(this);\r\n    }\r\n\r\n    handleShowPassword(event){\r\n        event.preventDefault();\r\n        this.setState({\r\n            showPassword: !this.state.showPassword\r\n        });\r\n    }\r\n\r\n    handleSubmit(values){\r\n        const password = values.password;\r\n        if(password.length == 0){\r\n            this.setState({\r\n                passwordErrMess: 'Required '\r\n            });\r\n        }\r\n        else if(password.length < 8 ){\r\n            this.setState({\r\n                passwordErrMess: 'Must have length greater of 7 '\r\n            });\r\n        }else if(!/\\d/.test(password)){\r\n            this.setState({\r\n                passwordErrMess: 'Must contain a number'\r\n            });\r\n        }else if(!/[`!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?~]/.test(password)){\r\n            this.setState({\r\n                passwordErrMess: 'Must contain a special character'\r\n            });\r\n        }else{\r\n            this.setState({\r\n                values: values\r\n            });\r\n            this.props.signupUser(values.username,  values.password, values.firstname, values.lastname);\r\n            this.props.resetSignupForm();\r\n        }\r\n    }\r\n    handlePasswordOnChange(e){\r\n        this.setState({\r\n            passwordErrMess: null,\r\n            passwordStrengthIndicator : (xcvbn(e.target.value).score * 100 / 4)\r\n        });\r\n    }\r\n    render(){\r\n        const passwordStrengthColor = () => {\r\n            switch(this.state.passwordStrengthIndicator * 4 / 100){\r\n                case 0: return '#828282';\r\n                case 1: return '#EA1111';\r\n                case 2: return '#FFAD00';\r\n                case 3: return '#9bc158';\r\n                case 4: return '#00b500';\r\n                default : return 'none';\r\n            }}\r\n        const changePasswordStrngthColor = () => ({\r\n            width: `${this.state.passwordStrengthIndicator}%`,\r\n             background: passwordStrengthColor(),\r\n             height: '7px'\r\n            });\r\n        const passwordStrengthLabel =()=>{\r\n            switch(this.state.passwordStrengthIndicator * 4 / 100){\r\n                case 0: return 'Very week';\r\n                case 1: return 'Week';\r\n                case 2: return 'Fear';\r\n                case 3: return 'Good';\r\n                case 4: return 'Strong';\r\n                default : return '';\r\n            }\r\n        }\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row row-container\"><div className=\"col-12 mt-5\">\r\n                      <h3>Signup For New Account</h3>\r\n                      <hr />\r\n                   </div>\r\n                <div className=\"col-12 col-md-9\">\r\n                        <Form model='signup' onSubmit={(values) => this.handleSubmit(values)} >\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"username\" md={2}>User Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".username\" id=\"username\" name=\"username\"\r\n                                        placeholder=\"User Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{required, minLength:minLength(3), maxLength:maxLength(15)\r\n                                        , usernameExists:(val) => ! this.props.usersnames.includes(val)\r\n                                        }}\r\n                                        />\r\n                                        <Errors\r\n                                            className='text-danger'\r\n                                            model='.username'\r\n                                            show='touched'\r\n                                            messages={{\r\n                                                required:'Required ',\r\n                                                minLength: 'Must be greater than 2 characters ',\r\n                                                maxLength: 'Must be less than 15 characters ',\r\n                                                usernameExists: 'username is not available '\r\n                                            }}\r\n                                        />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"password\" md={2}>Password</Label>\r\n                                <Col md={10}>\r\n                                    <div>\r\n                                        <p className=\"password-hint-signup\">hint: the password must have the length of 8 and must contain a number and special character</p>\r\n                                    </div>\r\n                                    <div className=\"signup-password-container\">\r\n                                    {\r\n                                        !this.state.showPassword ? \r\n                                            <div>\r\n                                            <Control.password model=\".password\" id=\"password\" name=\"password\"\r\n                                            placeholder=\"Password\"\r\n                                            autocomplete=\"new-password\"\r\n                                            className=\"form-control signup-password-field\"\r\n                                            onChange={this.handlePasswordOnChange}\r\n                                            />\r\n                                            <button className='signup-show-password-btn' onClick={this.handleShowPassword}><Eye/></button>\r\n                                            </div>\r\n                                        :\r\n                                        <div>\r\n                                        <Control.text model=\".password\" id=\"password\" name=\"password\"\r\n                                            placeholder=\"Password\"\r\n                                            className=\"form-control signup-password-field\"\r\n                                            onChange={this.handlePasswordOnChange}\r\n                                            // validators={{required, minLength:minLength(3),\r\n                                            //      maxLength:maxLength(15), mustContainNumber: (val) => ( !val || /\\d/.test(val)),\r\n                                            //      mustContainSpecialChar: (val) => (/[`!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?~]/.test(val))}}\r\n                                            /><button className='signup-show-password-btn' onClick={this.handleShowPassword}><EyeSlash/></button>\r\n                                       </div>\r\n                                    }\r\n                                    </div>\r\n                                    <div className='err-validation-password-signup'>\r\n                                        <p>{this.state.passwordErrMess}</p>\r\n                                    </div>\r\n                                    <>\r\n                                        <div className=\"progress\" style={{height: '7px'}}>\r\n                                            <div className=\"progress-bar progress\" style={changePasswordStrngthColor()}>\r\n\r\n                                            </div>\r\n                                        </div>\r\n                                        <p className='text-right' style={{color: passwordStrengthColor()}}>{passwordStrengthLabel()}</p>\r\n                                    </>\r\n                                    \r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\r\n                                        placeholder=\"First Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{required, minLength:minLength(3), maxLength:maxLength(15)}}\r\n                                        />\r\n                                        <Errors\r\n                                            className='text-danger'\r\n                                            model='.firstname'\r\n                                            show='touched'\r\n                                            messages={{\r\n                                                required:'Required ',\r\n                                                minLength: 'Must be greater than 2 characters ',\r\n                                                maxLength: 'Must be less than 15 characters '\r\n                                            }}\r\n                                        />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\r\n                                        placeholder=\"Last Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{required, minLength:minLength(3), maxLength:maxLength(15)}}\r\n                                         />\r\n                                         <Errors\r\n                                            className='text-danger'\r\n                                            model='.lastname'\r\n                                            show='touched'\r\n                                            messages={{\r\n                                                required:'Required ',\r\n                                                minLength: 'Must be greater than 2 characters ',\r\n                                                maxLength: 'Must be less than 15 characters '\r\n                                            }}\r\n                                        />\r\n                                </Col>\r\n                            </Row>\r\n                            \r\n                            \r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size:10, offset: 2}}>\r\n                                    <Button type=\"submit\" color=\"primary\" className='create-account-buton'>\r\n                                    Create Account\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </Form>\r\n                    </div>\r\n            </div>\r\n            </div>\r\n        );\r\n    }\r\n}","export const ADD_COMMENT = 'ADD_COMMENT';\r\n\r\nexport const PRODUCTS_LOADING = 'PRODUCTS_LOADING';\r\nexport const PRODUCTS_FAILED = 'PRODUCTS_FAILED';\r\nexport const ADD_PRODUCTS = 'ADD_PRODUCTS';\r\n\r\nexport const PROMOS_LOADING = 'PROMOS_LOADING';\r\nexport const ADD_PROMOS = 'ADD_PROMOS';\r\nexport const PROMOS_FAILED = 'PROMOS_FAILED';\r\n\r\nexport const ADD_COMMENTS = 'ADD_COMMENTS';\r\nexport const COMMENTS_FAILED = 'COMMENTS_FAILED';\r\n\r\nexport const ADD_LEADERS = 'ADD_LEADERS';\r\nexport const LEADERS_FAILED = 'LEADERS_FAILED';\r\nexport const LEADERS_LOADING = 'LEADERS_LOADING';\r\n\r\nexport const ADD_FEEDBACK = 'ADD_FEEDBACK';\r\n\r\nexport const LOGIN_REQUEST = 'LOGIN_REQUEST';\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\nexport const LOGIN_FAILURE = 'LOGIN_FAILURE';\r\n\r\nexport const LOGOUT_REQUEST = 'LOGOUT_REQUEST';\r\nexport const LOGOUT_SUCCESS = 'LOGOUT_SUCCESS';\r\nexport const LOGOUT_FAILURE = 'LOGOUT_FAILURE';\r\n\r\nexport const FAVORITES_LOADING = 'FAVORITES_LOADING';\r\nexport const FAVORITES_FAILED = 'FAVORITES_FAILED';\r\nexport const ADD_FAVORITES = 'ADD_FAVORITES';\r\n\r\nexport const SIGNUP_REQUEST = 'SIGNUP_REQUEST';\r\nexport const SIGNUP_SUCCESS = 'SIGNUP_SUCCESS';\r\nexport const SIGNUP_FAILURE = 'SIGNUP_FAILURE';\r\n\r\nexport const ADD_USERSNAMES = 'ADD_USERSNAMES';\r\nexport const USERSNAMES_FAILED = 'USERSNAMES_FAILED';\r\n\r\nexport const UPDATEUSER_REQUEST = 'UPDATEUSER_REQUEST';\r\nexport const UPDATEUSER_SUCCESS = 'UPDATEUSER_SUCCESS';\r\nexport const UPDATEUSER_FAILURE = 'UPDATEUSER_FAILURE';\r\n\r\nexport const UPLOAD_IMAGE_REQUEST = 'UPLOAD_IMAGE_REQUEST';\r\nexport const UPLOAD_IMAGE_SUCCESS = 'UPLOAD_IMAGE_SUCCESS';\r\nexport const UPLOAD_IMAGE_FAILURE = 'UPLOAD_IMAGE_FAILURE';","import * as ActionTypes from './ActionTypes';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\nexport const addComment = (comment) => ({\r\n    type: ActionTypes.ADD_COMMENT,\r\n    payload: comment\r\n});\r\n\r\nexport const postComment = (productId, rating, comment) => (dispatch) => {\r\n\r\n    const newComment = {\r\n        product: productId,\r\n        rating: rating,\r\n        comment: comment\r\n    }\r\n    console.log('Comment ', newComment);\r\n\r\n    const bearer = 'Bearer ' + localStorage.getItem('token');\r\n\r\n    return fetch(baseUrl + 'comments', {\r\n        method: 'POST',\r\n        body: JSON.stringify(newComment),\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': bearer\r\n        },\r\n        credentials: 'same-origin'\r\n    })\r\n    .then(response => {\r\n        if (response.ok) {\r\n            return response;\r\n        }\r\n        else {\r\n            var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n            error.response = response;\r\n            throw error;\r\n        }\r\n    },\r\n    error => {\r\n        var errmess = new Error(error.message);\r\n        throw errmess;\r\n    })\r\n    .then(response => response.json())\r\n    .then(response => dispatch(addComment(response)))\r\n    .catch(error => { console.log('Post comments ', error.message);\r\n        alert('Your comment could not be posted\\nError: '+ error.message); })\r\n}\r\n\r\nexport const fetchProducts = () => (dispatch) => {\r\n    dispatch(productsLoading(true));\r\n\r\n    return fetch(baseUrl + 'products')\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            }\r\n            else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n        error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n        })\r\n        .then(response => response.json())\r\n        .then(products => dispatch(addProducts(products)))\r\n        .catch(error => dispatch(productsFailed(error.message)));\r\n}\r\n\r\nexport const productsLoading = () => ({\r\n    type: ActionTypes.PRODUCTS_LOADING\r\n});\r\n\r\nexport const productsFailed = (errmess) => ({\r\n    type: ActionTypes.PRODUCTS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addProducts = (products) => ({\r\n    type: ActionTypes.ADD_PRODUCTS,\r\n    payload: products\r\n});\r\n\r\nexport const fetchComments = () => (dispatch) => {\r\n    return fetch(baseUrl + 'comments')\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            }\r\n            else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n        error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n        })\r\n        .then(response => response.json())\r\n        .then(comments => dispatch(addComments(comments)))\r\n        .catch(error => dispatch(commentsFailed(error.message)));\r\n}\r\n\r\nexport const commentsFailed = (errmess) => ({\r\n    type: ActionTypes.COMMENTS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addComments = (comments) => ({\r\n    type: ActionTypes.ADD_COMMENTS,\r\n    payload: comments\r\n});\r\n\r\nexport const fetchPromos = () => (dispatch) => {\r\n    dispatch(promosLoading(true));\r\n\r\n    return fetch(baseUrl + 'promotions')\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            }\r\n            else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n        error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n        })\r\n        .then(response => response.json())\r\n        .then(promos => dispatch(addPromos(promos)))\r\n        .catch(error => dispatch(promosFailed(error.message)));\r\n}\r\n\r\nexport const promosLoading = () => ({\r\n    type: ActionTypes.PROMOS_LOADING\r\n});\r\n\r\nexport const promosFailed = (errmess) => ({\r\n    type: ActionTypes.PROMOS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addPromos = (promos) => ({\r\n    type: ActionTypes.ADD_PROMOS,\r\n    payload: promos\r\n});\r\n\r\nexport const fetchLeaders = () => (dispatch) => {\r\n    \r\n    dispatch(leadersLoading());\r\n\r\n    return fetch(baseUrl + 'leaders')\r\n    .then(response => {\r\n        if (response.ok) {\r\n            return response;\r\n        } else {\r\n            var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n            error.response = response;\r\n            throw error;\r\n        }\r\n        },\r\n        error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n        })\r\n    .then(response => response.json())\r\n    .then(leaders => dispatch(addLeaders(leaders)))\r\n    .catch(error => dispatch(leadersFailed(error.message)));\r\n}\r\n\r\nexport const leadersLoading = () => ({\r\n    type: ActionTypes.LEADERS_LOADING\r\n});\r\n\r\nexport const leadersFailed = (errmess) => ({\r\n    type: ActionTypes.LEADERS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addLeaders = (leaders) => ({\r\n    type: ActionTypes.ADD_LEADERS,\r\n    payload: leaders\r\n});\r\n\r\nexport const postFeedback = (firstname, lastname, email, telnum,agree,contactType, message) => (dispatch) => {\r\n\r\n    const newFeedback = {\r\n        firstname, lastname, email, telnum,agree,contactType, message\r\n    }\r\n    const bearer = 'Bearer ' + localStorage.getItem('token');\r\n    return fetch(baseUrl + 'feedback', {\r\n        method: \"POST\",\r\n        body: JSON.stringify(newFeedback),\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': bearer\r\n        },\r\n        credentials: 'same-origin'\r\n    })\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            throw error;\r\n      })\r\n    .then(response => response.json())\r\n    .then(response => { \r\n        alert('Thank you for your feedback!'); \r\n        // dispatch(addFeedback(response)); we don't need to add feedback to redux store\r\n    })\r\n    .catch(error =>  { console.log('Feedback', error.message); alert('Your feedback could not be posted\\nError: '+error.message); });\r\n};\r\n\r\nexport const requestLogin = (creds) => {\r\n    return {\r\n        type: ActionTypes.LOGIN_REQUEST,\r\n        creds\r\n    }\r\n}\r\n  \r\nexport const receiveLogin = (response) => {\r\n    return {\r\n        type: ActionTypes.LOGIN_SUCCESS,\r\n        token: response.token,\r\n        userFirstname : response.firstname,\r\n        userLastname : response.lastname,\r\n        userImage : response.image,\r\n        userId: response.userId\r\n    }\r\n}\r\n  \r\nexport const loginError = (message) => {\r\n    return {\r\n        type: ActionTypes.LOGIN_FAILURE,\r\n        message\r\n    }\r\n}\r\n\r\nexport const loginUser = (creds) => (dispatch) => {\r\n    // We dispatch requestLogin to kickoff the call to the API\r\n    dispatch(requestLogin(creds))\r\n\r\n    return fetch(baseUrl + 'users/login', {\r\n        method: 'POST',\r\n        headers: { \r\n            'Content-Type':'application/json' \r\n        },\r\n        body: JSON.stringify(creds)\r\n    })\r\n    .then(response => {\r\n        if (response.ok) {\r\n            return response;\r\n        } else {\r\n            var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n            error.response = response;\r\n            throw error;\r\n        }\r\n        },\r\n        error => {\r\n            throw error;\r\n        })\r\n    .then(response => response.json())\r\n    .then(response => {\r\n        if (response.success) {\r\n            // If login was successful, set the token in local storage\r\n            localStorage.setItem('token', response.token);\r\n            localStorage.setItem('userFirstname', response.firstname);\r\n            localStorage.setItem('userLastname', response.lastname);\r\n            localStorage.setItem('userImage', response.image);\r\n            localStorage.setItem('creds', JSON.stringify(creds));\r\n            localStorage.setItem('userId', response.userId);\r\n            // Dispatch the success action\r\n            dispatch(fetchFavorites());\r\n            dispatch(receiveLogin(response));\r\n        }\r\n        else {\r\n            var error = new Error('Error ' + response.status);\r\n            error.response = response;\r\n            throw error;\r\n        }\r\n    })\r\n    .catch(error => dispatch(loginError(error.message)))\r\n};\r\n\r\nexport const requestLogout = () => {\r\n    return {\r\n      type: ActionTypes.LOGOUT_REQUEST\r\n    }\r\n}\r\n  \r\nexport const receiveLogout = () => {\r\n    return {\r\n      type: ActionTypes.LOGOUT_SUCCESS\r\n    }\r\n}\r\n\r\n// Logs the user out\r\nexport const logoutUser = () => (dispatch) => {\r\n    dispatch(requestLogout())\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('creds');\r\n    localStorage.removeItem('userFirstname');\r\n    localStorage.removeItem('userLastname');\r\n    localStorage.removeItem('userImage');\r\n    localStorage.removeItem('userId');\r\n    dispatch(favoritesFailed(\"Error 401: Unauthorized\"));\r\n    dispatch(receiveLogout())\r\n}\r\n\r\nexport const postFavorite = (productId) => (dispatch) => {\r\n\r\n    const bearer = 'Bearer ' + localStorage.getItem('token');\r\n\r\n    return fetch(baseUrl + 'favorites/' + productId, {\r\n        method: \"POST\",\r\n        body: JSON.stringify({\"_id\": productId}),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          'Authorization': bearer\r\n        },\r\n        credentials: \"same-origin\"\r\n    })\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            throw error;\r\n      })\r\n    .then(response => response.json())\r\n    .then(favorites => { console.log('Favorite Added', favorites); dispatch(addFavorites(favorites)); })\r\n    .catch(error => dispatch(favoritesFailed(error.message)));\r\n}\r\n\r\nexport const deleteFavorite = (dishId) => (dispatch) => {\r\n\r\n    const bearer = 'Bearer ' + localStorage.getItem('token');\r\n\r\n    return fetch(baseUrl + 'favorites/' + dishId, {\r\n        method: \"DELETE\",\r\n        headers: {\r\n          'Authorization': bearer\r\n        },\r\n        credentials: \"same-origin\"\r\n    })\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            throw error;\r\n      })\r\n    .then(response => response.json())\r\n    .then(favorites => { console.log('Favorite Deleted', favorites); dispatch(addFavorites(favorites)); })\r\n    .catch(error => dispatch(favoritesFailed(error.message)));\r\n};\r\n\r\nexport const fetchFavorites = () => (dispatch) => {\r\n    dispatch(favoritesLoading(true));\r\n\r\n    const bearer = 'Bearer ' + localStorage.getItem('token');\r\n\r\n    return fetch(baseUrl + 'favorites', {\r\n        headers: {\r\n            'Authorization': bearer\r\n        },\r\n    })\r\n    .then(response => {\r\n        if (response.ok) {\r\n            return response;\r\n        }\r\n        else {\r\n            var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n            error.response = response;\r\n            throw error;\r\n        }\r\n    },\r\n    error => {\r\n        var errmess = new Error(error.message);\r\n        throw errmess;\r\n    })\r\n    .then(response => response.json())\r\n    .then(favorites => dispatch(addFavorites(favorites)))\r\n    .catch(error => dispatch(favoritesFailed(error.message)));\r\n}\r\n\r\nexport const favoritesLoading = () => ({\r\n    type: ActionTypes.FAVORITES_LOADING\r\n});\r\n\r\nexport const favoritesFailed = (errmess) => ({\r\n    type: ActionTypes.FAVORITES_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addFavorites = (favorites) => ({\r\n    type: ActionTypes.ADD_FAVORITES,\r\n    payload: favorites\r\n});\r\nexport const addFeedback = (feedback) => ({\r\n    type: ActionTypes.ADD_FEEDBACK,\r\n    payload: feedback\r\n});\r\n\r\n\r\n\r\nexport const requestSignup = (values) => {\r\n    return {\r\n        type: ActionTypes.SIGNUP_REQUEST,\r\n        values\r\n    }\r\n}\r\n  \r\nexport const receiveSignup = (response) => {\r\n    return {\r\n        type: ActionTypes.SIGNUP_SUCCESS,\r\n\r\n    }\r\n}\r\n  \r\nexport const signupError = (message) => {\r\n    return {\r\n        type: ActionTypes.SIGNUP_FAILURE,\r\n        message\r\n    }\r\n}\r\n\r\nexport const signupUser = (username, password,firstname, lastname) => (dispatch) => {\r\n    const values = {username, password,firstname, lastname}\r\n\r\n    // We dispatch requestLogin to kickoff the call to the API\r\n    dispatch(requestSignup(values))\r\n    return fetch(baseUrl + 'users/signup', {\r\n        method: 'POST',\r\n        headers: { \r\n            'Content-Type':'application/json' \r\n        },\r\n        body: JSON.stringify(values)\r\n    })\r\n    .then(response => {\r\n        if (response.ok) {\r\n            return response;\r\n        } else {\r\n            var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n            error.response = response;\r\n            throw error;\r\n        }\r\n        },\r\n        error => {\r\n            throw error;\r\n        })\r\n    .then(response => response.json())\r\n    .then(response => {\r\n        if (response.success) {\r\n            // If signup was successful, login\r\n            // Dispatch the success action\r\n            dispatch(loginUser({username: values.username, password: values.password}));\r\n            dispatch(receiveSignup());\r\n        }\r\n        else {\r\n            var error = new Error('Error ' + response.status);\r\n            error.response = response;\r\n            throw error;\r\n        }\r\n    })\r\n    .catch(error => dispatch(signupError(error.message)))\r\n};\r\n\r\n\r\n\r\nexport const requestUploadImage = (values) => {\r\n    return {\r\n        type: ActionTypes.UPLOAD_IMAGE_REQUEST,\r\n        values\r\n    }\r\n}\r\n  \r\nexport const receiveUploadImage = (response) => {\r\n    return {\r\n        type: ActionTypes.UPLOAD_IMAGE_SUCCESS,\r\n\r\n    }\r\n}\r\n  \r\nexport const uploadImageError = (message) => {\r\n    return {\r\n        type: ActionTypes.UPLOAD_IMAGE_FAILURE,\r\n        message\r\n    }\r\n}\r\n\r\nexport const uploadImage = (image) => (dispatch) => {\r\n\r\n    const bearer = 'Bearer ' + localStorage.getItem('token');\r\n\r\n    // We dispatch requestLogin to kickoff the call to the API\r\n    dispatch(requestUploadImage())\r\n    return fetch(baseUrl + 'imageUpload', {\r\n        method: 'POST',\r\n        headers: { \r\n            'Authorization': bearer\r\n\r\n        },\r\n        body:  image\r\n    })\r\n    .then(response => {\r\n        if (response.ok) {\r\n            return response;\r\n        } else {\r\n            var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n            error.response = response;\r\n            throw error;\r\n        }\r\n        },\r\n        error => {\r\n            throw error;\r\n        })\r\n    .then(response => response.json())\r\n    .then(response => {\r\n\r\n        if (response.success) {\r\n            // If signup was successful, login\r\n            // Dispatch the success action\r\n            dispatch(updateUser({image: 'assets/images/upload/usersImages/' + response.filename}));\r\n            dispatch(receiveUploadImage());\r\n        }\r\n        else {\r\n            var error = new Error('Error ' + response.status);\r\n            error.response = response;\r\n            throw error;\r\n        }\r\n    })\r\n    .catch(error => dispatch(uploadImageError(error.message)))\r\n};\r\n\r\n\r\nexport const fetchUsersNames = () => (dispatch) => {\r\n    \r\n\r\n    return fetch(baseUrl + 'users/usersnames')\r\n    .then(response => {\r\n        if (response.ok) {\r\n            return response;\r\n        } else {\r\n            var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n            error.response = response;\r\n            throw error;\r\n        }\r\n        },\r\n        error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n        })\r\n    .then(response => response.json())\r\n    .then(leaders => dispatch(addUsersNames(leaders)))\r\n    .catch(error => dispatch(usersNamesFailed(error.message)));\r\n}\r\n\r\nexport const usersNamesFailed = (errmess) => ({\r\n    type: ActionTypes.USERSNAMES_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addUsersNames = (usernames) => ({\r\n    type: ActionTypes.ADD_USERSNAMES,\r\n    payload: usernames\r\n});\r\n\r\n\r\nexport const requestUpdateUser = (values) => {\r\n    return {\r\n        type: ActionTypes.UPDATEUSER_REQUEST,\r\n        values\r\n    }\r\n}\r\n  \r\nexport const receiveUpdatedUser= (response) => {\r\n    const creds = {password: JSON.parse(localStorage.getItem('creds')).password ,username: response.username};\r\n    return {\r\n        type: ActionTypes.UPDATEUSER_SUCCESS,\r\n        userFirstname : response.firstname,\r\n        userLastname : response.lastname,\r\n        userImage : response.image,\r\n        user: creds\r\n    }\r\n}\r\n  \r\nexport const updateUserError = (message) => {\r\n    return {\r\n        type: ActionTypes.UPDATEUSER_FAILURE,\r\n        message\r\n    }\r\n}\r\n\r\nexport const updateUser = (values) => (dispatch) => {\r\n    \r\n    dispatch(requestUpdateUser(values))\r\n    const bearer = 'Bearer ' + localStorage.getItem('token');\r\n    return fetch(baseUrl + 'users/' + localStorage.getItem('userId'), {\r\n        method: 'PUT',\r\n        headers: { \r\n            'Content-Type':'application/json' ,\r\n            'Authorization': bearer\r\n        },\r\n        body: JSON.stringify(values)\r\n    })\r\n    .then(response => {\r\n        if (response.ok) {\r\n            return response;\r\n        } else {\r\n            var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n            error.response = response;\r\n            throw error;\r\n        }\r\n        },\r\n        error => {\r\n            throw error;\r\n        })\r\n    .then(response => response.json())\r\n    .then(response => {\r\n\r\n            localStorage.setItem('userFirstname', response.firstname);\r\n            localStorage.setItem('userLastname', response.lastname);\r\n            localStorage.setItem('userImage', response.image);\r\n            const creds = {password: JSON.parse(localStorage.getItem('creds')).password ,username: response.username};\r\n            localStorage.setItem('creds',JSON.stringify(creds));\r\n            dispatch(receiveUpdatedUser(response));\r\n        \r\n        \r\n    })\r\n    .catch(error => dispatch(updateUserError(error.message)))\r\n};\r\n","import Menu from './MenuComponent';\r\nimport Header from './HeaderComponent';\r\nimport Footer from './FooterComponent';\r\nimport Home from './HomeComponent';\r\nimport Contact from './ContactComponent';\r\nimport ProductDetails from './ProductDetailsComponent';\r\nimport About from './AboutComponent';\r\nimport Favorites from './FavoriteComponent';\r\nimport ProfileSettings from './ProfileSettingsComponent';\r\nimport Signup from './SignupComponent';\r\n\r\nimport {Switch, Route, Redirect, withRouter} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport { addComment, postComment, fetchProducts, fetchPromos, fetchComments\r\n        , fetchLeaders, postFeedback, loginUser, logoutUser, updateUser, uploadImage,\r\n         fetchFavorites, postFavorite, deleteFavorite, signupUser, fetchUsersNames } from '../redux/ActionCreators';\r\nimport { Component} from 'react';\r\nimport {actions} from 'react-redux-form';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\n\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  \r\n    addComment: (productId, rating, author, comment) => dispatch(addComment(productId, rating, author, comment)),\r\n    fetchProducts: () => { dispatch(fetchProducts())},\r\n    resetFeedbackForm : () =>{dispatch(actions.reset('feedback'))},\r\n    fetchPromos: () => dispatch(fetchPromos()),\r\n    fetchComments: () => dispatch(fetchComments()),\r\n    fetchLeaders: () => dispatch(fetchLeaders()),\r\n    postComment: (productId, rating, author, comment) => dispatch(postComment(productId, rating, author, comment)),\r\n    postFeedback: (firstname, lastname, email, telnum,agree,contactType, message) => dispatch(postFeedback(firstname, lastname, email, telnum,agree,contactType, message)),\r\n    loginUser: (creds) => dispatch(loginUser(creds)),\r\n    logoutUser: () => dispatch(logoutUser()),\r\n    signupUser: (username, password,firstname, lastname) => dispatch(signupUser(username, password,firstname, lastname)),\r\n    fetchFavorites: () => dispatch(fetchFavorites()),\r\n    postFavorite: (productId) => dispatch(postFavorite(productId)),\r\n    deleteFavorite: (productId) => dispatch(deleteFavorite(productId)),\r\n    resetSignupForm : () => dispatch(actions.reset('signup')),\r\n    fetchUsersNames : () => dispatch(fetchUsersNames()),\r\n    resetProfileSettingsForm : () =>dispatch(actions.reset('profileSettings')),\r\n    updateUser : (values) => dispatch(updateUser(values)),\r\n    uploadImage : (image) => dispatch(uploadImage(image))\r\n  });\r\n\r\n\r\nconst mapStateToProps = state =>{\r\n    return {\r\n        products: state.products,\r\n        productsComments: state.productsComments,\r\n        leaders: state.leaders,\r\n        promotions: state.promotions,\r\n        favorites: state.favorites,\r\n        auth: state.auth,\r\n        usersnames: state.usersnames\r\n    }\r\n}\r\n\r\nclass Main extends Component  {\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n    componentDidMount() {\r\n        this.props.fetchProducts();\r\n        this.props.fetchPromos();\r\n        this.props.fetchComments();\r\n        this.props.fetchLeaders();\r\n        this.props.fetchUsersNames();\r\n      }\r\n      \r\n    render(){\r\n        const ProductWithId = ({match}) => {\r\n            return(\r\n              (this.props.auth.isAuthenticated && this.props.favorites.favorites)\r\n              ?\r\n              <ProductDetails product={this.props.products.products.filter((product) => product._id === match.params.productId)[0]}\r\n                isLoading={this.props.products.isLoading}\r\n                errMess={this.props.products.errMess}\r\n                productComments={ this.props.productsComments ? this.props.productsComments.comments.filter((comment) => comment.product === match.params.productId): null}\r\n                commentsErrMess={  this.props.productsComments ? this.props.productsComments.errMess: false}\r\n                postComment={this.props.postComment}\r\n                favorite={this.props.favorites.favorites.products.some((product) => product._id === match.params.productId)}\r\n                postFavorite={this.props.postFavorite}\r\n                deleteFavorite={this.props.deleteFavorite}\r\n                isAuthenticated={this.props.auth.isAuthenticated}\r\n                />\r\n              :\r\n              <ProductDetails product={this.props.products.products.filter((product) => product._id === match.params.productId)[0]}\r\n                isLoading={this.props.products.isLoading}\r\n                errMess={this.props.products.errMess}\r\n                productComments={ this.props.productsComments ? this.props.productsComments.comments.filter((comment) => comment.product === match.params.productId) : null}\r\n                commentsErrMess={ this.props.productsComments ? this.props.productsComments.errMess : false}\r\n                postComment={this.props.postComment}\r\n                favorite={false}\r\n                postFavorite={this.props.postFavorite}\r\n                deleteFavorite={this.props.deleteFavorite}\r\n                isAuthenticated={this.props.auth.isAuthenticated}\r\n                />\r\n            );\r\n          }\r\n\r\n        const PrivateRoute = ({ component: Component, ...rest }) => (\r\n            <Route {...rest} render={(props) => (\r\n              this.props.auth.isAuthenticated\r\n                ? <Component {...props} />\r\n                : <Redirect to={{\r\n                    pathname: '/home',\r\n                    state: { from: props.location }\r\n                  }} />\r\n            )} />\r\n          );\r\n        const RouteForNOtAuthinticated = ({component: Component, ...rest}) =>(\r\n            <Route {...rest} render = {(props) => (\r\n                !this.props.auth.isAuthenticated\r\n                ? <Component {...props} />\r\n                : <Redirect to={{\r\n                    pathname: '/home',\r\n                    state: { from: props.location }\r\n                }}/>\r\n            )}/>\r\n        );\r\n        return(\r\n            <>\r\n                <Header auth={this.props.auth} \r\n                        loginUser={this.props.loginUser} \r\n                        logoutUser={this.props.logoutUser} />\r\n                <TransitionGroup>\r\n                    <CSSTransition key={this.props.location.key} classNames='page' timeout={300}>\r\n                        <Switch location={this.props.location}>\r\n                            <Route path='/home' component={\r\n                                ()=> <Home product={this.props.products.products.filter(product => product.featured)[0]}\r\n                                productsLoading={this.props.products.isLoading}\r\n                                productsErrMess={this.props.products.errMess}\r\n                                promotion={this.props.promotions.promotions.filter(promotion => promotion.featured)[0]} \r\n                                promoLoading={this.props.promotions.isLoading}\r\n                                promoErrMess={this.props.promotions.errMess}\r\n                                leaderLoading={this.props.leaders.isLoading}\r\n                                leaderErrMess={this.props.leaders.errMess}\r\n                                leader={this.props.leaders.leaders.filter(leader => leader.featured)[0]}/>}/>\r\n                            <Route path=\"/menu/:productId\" component={ProductWithId}/>\r\n                            <Route path='/menu' component={()=><Menu products={this.props.products} productsComments={this.props.productsComments} />}/>\r\n                            <Route path='/contactus' component={()=><Contact \r\n                            resetFeedbackForm={this.props.resetFeedbackForm}\r\n                            postFeedback={this.props.postFeedback}\r\n                            isAuthenticated={this.props.auth.isAuthenticated}\r\n                            />}/>\r\n                            <Route path='/aboutus' component={()=><About leaders={this.props.leaders.leaders} \r\n                                isLoading={this.props.leaders.isLoading}\r\n                                errMess={this.props.leaders.errMess}/>}/>\r\n                                <RouteForNOtAuthinticated exact path='/signup' component={()=>\r\n                                <Signup  resetSignupForm={this.props.resetSignupForm} \r\n                                    signupUser={this.props.signupUser} usersnames = {this.props.usersnames.usersnames}/>} />\r\n                            <PrivateRoute exact path=\"/favorites\" \r\n                                component={() =><Favorites favorites={this.props.favorites} deleteFavorite={this.props.deleteFavorite} />} /> \r\n                            <PrivateRoute exact path=\"/profile-settings\" \r\n                                component={() =><ProfileSettings auth={this.props.auth} \r\n                                                uploadImage = {this.props.uploadImage}\r\n                                                resetProfileSettingsForm ={this.props.resetProfileSettingsForm}\r\n                                                usersnames = {this.props.usersnames.usersnames}\r\n                                                updateUser= {this.props.updateUser}\r\n                                                />} /> \r\n                            <Redirect to='/home'/> \r\n                        </Switch>          \r\n                    \r\n                    </CSSTransition>\r\n                </TransitionGroup>\r\n                <Footer isAuthenticated={this.props.auth.isAuthenticated}/>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps,mapDispatchToProps)(Main));","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Products = (state = { isLoading: true,\r\n    errMess: null,\r\n    products:[]}, action)=>{\r\n    switch(action.type){\r\n        case ActionTypes.ADD_PRODUCTS:\r\n            return {...state, isLoading: false, errMess: null, products: action.payload};\r\n\r\n        case ActionTypes.PRODUCTS_LOADING:\r\n            return {...state, isLoading: true, errMess: null, products: []}\r\n\r\n        case ActionTypes.PRODUCTS_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n        default: return state;\r\n    }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Leaders = (state={\r\n    isLoading: true,\r\n    errMess: null,\r\n    leaders: []\r\n}, action) => {\r\n    switch(action.type){\r\n        case ActionTypes.ADD_LEADERS:\r\n            return {...state, isLoading: false, errMess:null, leaders: action.payload};\r\n\r\n        case ActionTypes.LEADERS_LOADING:\r\n            return {...state, isLoading: true, errMess:null, leaders: []};\r\n            \r\n        case ActionTypes.LEADERS_FAILED:\r\n            return {...state, isLoading: false, errMess:action.payload};\r\n        default :\r\n            return state;\r\n    }\r\n}","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Promotions = (state  = { isLoading: true,\r\n                                        errMess: null,\r\n                                        promotions:[]}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_PROMOS:\r\n        return {...state, isLoading: false, errMess: null, promotions: action.payload};\r\n\r\n        case ActionTypes.PROMOS_LOADING:\r\n            return {...state, isLoading: true, errMess: null, promotions: []}\r\n\r\n        case ActionTypes.PROMOS_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n\r\n        default:\r\n          return state;\r\n      }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Comments = (state = { errMess: null, comments:[]}, action) => {\r\n    switch (action.type) {\r\n\r\n        case ActionTypes.ADD_COMMENTS:\r\n          return {...state, errMess: null, comments: action.payload};\r\n    \r\n        case ActionTypes.COMMENTS_FAILED:\r\n          return {...state, errMess: action.payload};\r\n\r\n        case ActionTypes.ADD_COMMENT:\r\n            var comment = action.payload;\r\n            return {...state, comments:state.comments.concat(comment)};\r\n\r\n        default:\r\n          return state;\r\n      }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const favorites = (state = {\r\n        isLoading: true,\r\n        errMess: null,\r\n        favorites: null\r\n    }, action) => {\r\n    switch(action.type) {\r\n        case ActionTypes.ADD_FAVORITES:\r\n            return {...state, isLoading: false, errMess: null, favorites: action.payload};\r\n\r\n        case ActionTypes.FAVORITES_LOADING:\r\n            return {...state, isLoading: true, errMess: null, favorites: null};\r\n\r\n        case ActionTypes.FAVORITES_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload, favorites: null};\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import * as ActionTypes from './ActionTypes';\r\n\r\n// The auth reducer. The starting state sets authentication\r\n// based on a token being in local storage. In a real app,\r\n// we would also want a util to check if the token is expired.\r\nexport const Auth = (state = {\r\n        isLoading: false,\r\n        isAuthenticated: localStorage.getItem('token') ? true : false,\r\n        token: localStorage.getItem('token'),\r\n        user: localStorage.getItem('creds') ? JSON.parse(localStorage.getItem('creds')) : null,\r\n        errMess: null,\r\n        userFirstname: localStorage.getItem('userFirstname'),\r\n        userLastname: localStorage.getItem('userLastname'),\r\n        userImage : localStorage.getItem('userImage'),\r\n        userId: localStorage.getItem('userId')\r\n    }, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.LOGIN_REQUEST:\r\n            return {...state,\r\n                isLoading: true,\r\n                isAuthenticated: false,\r\n                user: action.creds\r\n            };\r\n        case ActionTypes.LOGIN_SUCCESS:\r\n            return {...state,\r\n                isLoading: false,\r\n                isAuthenticated: true,\r\n                errMess: '',\r\n                token: action.token,\r\n                userFirstname: action.userFirstname,\r\n                userLastname: action.userLastname,\r\n                userImage :action.userImage,\r\n                userId :action.userId\r\n            };\r\n        case ActionTypes.LOGIN_FAILURE:\r\n            return {...state,\r\n                isLoading: false,\r\n                isAuthenticated: false,\r\n                errMess: action.message\r\n            };\r\n        case ActionTypes.LOGOUT_REQUEST:\r\n            return {...state,\r\n                isLoading: true,\r\n                isAuthenticated: true\r\n            };\r\n        case ActionTypes.LOGOUT_SUCCESS:\r\n            return {...state,\r\n                isLoading: false,\r\n                isAuthenticated: false,\r\n                token: '',\r\n                user: null,\r\n                userFirstname:'',\r\n                userLastname: '',\r\n                userImage : '',\r\n                userId: ''\r\n            };\r\n            case ActionTypes.SIGNUP_REQUEST:\r\n                return {...state,\r\n                    isLoading: true,\r\n                };\r\n            case ActionTypes.SIGNUP_SUCCESS:\r\n                return {...state,\r\n                    isLoading: false,\r\n                    errMess: '',\r\n                };\r\n            case ActionTypes.SIGNUP_FAILURE:\r\n                return {...state,\r\n                    isLoading: false,\r\n                    isAuthenticated: false,\r\n                    errMess: action.message\r\n                };\r\n                case ActionTypes.UPLOAD_IMAGE_REQUEST:\r\n                return {...state,\r\n                    isLoading: true,\r\n                };\r\n            case ActionTypes.UPLOAD_IMAGE_SUCCESS:\r\n                return {...state,\r\n                    isLoading: false,\r\n                    errMess: '',\r\n                };\r\n            case ActionTypes.UPLOAD_IMAGE_FAILURE:\r\n                return {...state,\r\n                    isLoading: false,\r\n                    errMess: action.message\r\n                };\r\n            case ActionTypes.UPDATEUSER_REQUEST:\r\n                return {...state,\r\n                    isLoading: true,\r\n                };\r\n            case ActionTypes.UPDATEUSER_SUCCESS:\r\n                return {...state,\r\n                        isLoading: false,\r\n                        errMess: '',\r\n                        userFirstname: action.userFirstname,\r\n                        userLastname: action.userLastname,\r\n                        userImage :action.userImage,\r\n                        user: action.user\r\n                };\r\n            case ActionTypes.UPDATEUSER_FAILURE:\r\n                return {...state,\r\n                    isLoading: false,\r\n                    errMess: action.message\r\n                };\r\n        default:\r\n            return state\r\n    }\r\n}","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Usersnames = (state={\r\n    errMess: null,\r\n    usersnames: []\r\n}, action) => {\r\n    switch(action.type){\r\n        case ActionTypes.ADD_USERSNAMES:\r\n            return {...state, errMess:null, usersnames: action.payload};\r\n\r\n\r\n            \r\n        case ActionTypes.USERSNAMES_FAILED:\r\n            return {...state, errMess:action.payload};\r\n        default :\r\n            return state;\r\n    }\r\n}","import {imageUrl} from '../shared/baseUrl'\r\n\r\nexport const InitialFeedback = {\r\n    firstname: '',\r\n    lastname: '',\r\n    telnum:'',\r\n    email:'',\r\n    agree:false,\r\n    contactType: 'Tel.',\r\n    message:''\r\n};\r\nexport const InitialSignup = {\r\n    username:'',\r\n    password:'',\r\n    firstname:'',\r\n    lastname:''\r\n}\r\nexport const InitialProfileSettings = {\r\n    username:'',\r\n    password:'',\r\n    confirmPassword:'',\r\n    newPassword:'',\r\n    firstname:'',\r\n    lastname:'',\r\n    image: imageUrl + 'assets/images/defaultAvatar'\r\n}","import './App.css';\r\nimport Main from './components/MainComponent';\r\nimport {HashRouter} from 'react-router-dom';\r\nimport {Provider} from 'react-redux';\r\nimport {ConfigureStore} from './redux/configureStore';\r\n\r\nfunction App() {\r\n  const store = ConfigureStore();\r\n  return (\r\n    <Provider store={store}>\r\n        <HashRouter>\r\n        <div className=\"App\">\r\n          <Main/>\r\n        </div>\r\n      </HashRouter>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import {createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport {Products} from './products';\r\nimport {Leaders} from './leaders';\r\nimport {Promotions} from './promotions';\r\nimport {Comments} from './comments';\r\nimport { favorites } from './favorites';\r\nimport { Auth } from './auth';\r\nimport {Usersnames} from './usersnames';\r\nimport {InitialFeedback} from './forms';\r\nimport { InitialSignup } from './forms';\r\nimport { InitialProfileSettings } from './forms';\r\n\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\nimport {createForms} from 'react-redux-form';\r\n\r\nexport const ConfigureStore = () =>{\r\n    const store = createStore(\r\n        combineReducers({\r\n            products:Products,\r\n            promotions:Promotions,\r\n            leaders: Leaders,\r\n            productsComments: Comments,\r\n            auth: Auth,\r\n            favorites,\r\n            usersnames: Usersnames,\r\n            ...createForms({feedback: InitialFeedback, signup:InitialSignup,profileSettings: InitialProfileSettings})\r\n        }),\r\n        applyMiddleware(thunk, logger)\r\n    );\r\n    return store;\r\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport 'bootstrap-css-only/css/bootstrap.min.css';\nimport 'mdbreact/dist/css/mdb.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}